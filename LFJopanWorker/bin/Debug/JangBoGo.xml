<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JangBoGo</name>
    </assembly>
    <members>
        <member name="F:JangBoGo.Enums.JsonUtilResultType.success">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:JangBoGo.Enums.JsonUtilResultType.fail">
            <summary>
            실패
            </summary>
        </member>
        <member name="F:JangBoGo.Enums.JsonUtilResultType.confirm">
            <summary>
            질의
            </summary>
        </member>
        <member name="F:JangBoGo.Enums.JsonUtilResultType.failRedirect">
            <summary>
            실패-리다이렉트
            </summary>
        </member>
        <member name="T:JangBoGo.Exceptions.TqoonApplicationErrorConfig">
            <summary>
            Tqoon 1.0과 2.0 에러 로깅에 사용되는 클래스 / 그외 다른 사이트는 다른데이터베이스와 테이블을 참조하므로 적용하면 안됨.
            </summary>
        </member>
        <member name="M:JangBoGo.Exceptions.TqoonException.CreateBizException(System.String,System.String)">
            <summary>
            티쿤 업무 오류
            </summary>
            <param name="message">메시지</param>
            <param name="title">제목</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Exceptions.TqoonException.CreateTransBizException(System.String,System.String,System.String[])">
            <summary>
            티쿤 업무오류 - 번역용
            </summary>
            <param name="category">카테고리</param>
            <param name="key">키</param>
            <param name="args">포멧파라메터</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Exceptions.TqoonException.CreateParamException(System.String,System.String,System.String)">
            <summary>
            티쿤 파라메터 오류
            v2에서는 다음 패턴으로만 사용 CreateParamException("errorMessage", paramName: "formParamName")
            </summary>
            <param name="message">메시지</param>
            <param name="title">제목, v2에선 쓰지 말것</param>
            <param name="paramName">CSS 셀렉터, form name, 값</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Exceptions.TqoonException.ApplicationErrorGlobalProcess(System.Web.HttpApplication)">
            <summary>
            Global.asax 처리용
            response 해더에 관련 내용을 추가해준다.
            </summary>
            <returns>대상여부</returns>
        </member>
        <member name="T:JangBoGo.Exceptions.TqException">
            <summary>
            티쿤 오류
            </summary>
        </member>
        <member name="T:JangBoGo.Exceptions.TqTransException">
            <summary>
            티쿤 오류 - 번역용
            </summary>
        </member>
        <member name="T:JangBoGo.Exceptions.TqoonApiException">
            <summary>
            티쿤 API 오류
            </summary>
        </member>
        <member name="T:JangBoGo.Exceptions.TqoonBizException">
            <summary>
            티쿤 업무처리 오류
            </summary>
        </member>
        <member name="T:JangBoGo.Exceptions.TqoonTransBizException">
            <summary>
            티쿤 업무처리 오류 - 번역
            </summary>
        </member>
        <member name="T:JangBoGo.Exceptions.TqoonParamException">
            <summary>
            티쿤 파라메터 오류
            </summary>
        </member>
        <member name="T:JangBoGo.Exceptions.TqoonValidationException">
            <summary>
            2016.04.27 이동하 서버 벨리데이션 익셉션 : 잘못된 파라메터, 잘못된 접근, 조회 불가 등 예견된 에러 분기를 위해 사용함333
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.UriExtendFunction.IsTqoonHost(System.String)">
            <summary>
            티쿤 공식 도메인 여부를 판단합니다.
            </summary>
            <param name="host">host</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Extend.UriExtendFunction.IsTqoonTestHost(System.String)">
            <summary>
            티쿤의 테스트 주소패턴 여부를 판단합니다.
            </summary>
            <param name="host">host</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Extend.UriExtendFunction.GetTqoonTestSubDomain(System.String)">
            <summary>
            티쿤의 테스트 주소패턴에 따라 전달 된, 주소에서 테스트 서브도메인을 추출합니다.
            </summary>
            <param name="host"></param>
            <returns>해당하지 않으면 string.Empty를 리턴합니다.</returns>
        </member>
        <member name="M:JangBoGo.Extend.UriExtendFunction.PrependWWW(System.String)">
            <summary>
            주소 앞 부분에 WWW 또는 운영 환경에 적절한 서브도메인 주소를 붙입니다.
            </summary>
            <param name="host">host</param>
            <returns>그냥 호출 시, 적절히 판단하여 필요 시, www를 붙입니다.</returns>
        </member>
        <member name="M:JangBoGo.Extend.UriExtendFunction.PrependWWW(System.String,System.String)">
            <summary>
            주소 앞 부분에 WWW 또는 운영 환경에 적절한 서브도메인 주소를 붙입니다.
            </summary>
            <param name="host">host</param>
            <param name="requestHost">요청자 host</param>
            <returns>요청자 호스트를 분석하여 서브도메인에 티쿤의 개발환경을 고려한 주소로 붙입니다.</returns>
        </member>
        <member name="M:JangBoGo.Extend.UriExtendFunction.HasWWWOrValidSubDomain(System.String)">
            <summary>
            주소 앞 부분에 WWW 또는 운영 환경에 적절한 서브도메인 주소가 있는지 확인한다.
            </summary>
            <param name="host"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HIRAGANA(System.Char)">
            <summary>
            히라가나 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HIRAGANA(System.String)">
            <summary>
            히라가나 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_KATAKANA(System.Char)">
            <summary>
            전각카타카나 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_KATAKANA(System.String)">
            <summary>
            전각카타카나 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_KATAKANA(System.Char)">
            <summary>
            반각카타카나 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_KATAKANA(System.String)">
            <summary>
            반각카타카나 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_SPACE(System.Char)">
            <summary>
            반각공백 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_SPACE(System.String)">
            <summary>
            반각공백 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_SPACE(System.Char)">
            <summary>
            전각공백 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_SPACE(System.String)">
            <summary>
            전각공백 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_NUMBER(System.Char)">
            <summary>
            반각숫자 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_NUMBER(System.String)">
            <summary>
            반각숫자 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_NUMBER(System.Char)">
            <summary>
            전각숫자 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_NUMBER(System.String)">
            <summary>
            전각숫자 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_ALPHA(System.Char)">
            <summary>
            반각영문 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_HALF_ALPHA(System.String)">
            <summary>
            반각영문 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_ALPHA(System.Char)">
            <summary>
            전각영문 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FULL_ALPHA(System.String)">
            <summary>
            전각영문 체크
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_JISX0201(System.Char)">
            <summary>
            JISX0201
            </summary>
            <param name="ch"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_JISX0208_01_08(System.Char)">
            <summary>
            JISX0208 01-08
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_JISX0208_16_47(System.Char)">
            <summary>
            JISX0208 16-47
            JIS제1수준한자
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_JISX0208_48_50(System.Char)">
            <summary>
            JISX0208 48-50
            JIS제2수준한자
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_JISX0208_51_60(System.Char)">
            <summary>
            JISX0208 51-60
            JIS제2수준한자
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_JISX0208_61_70(System.Char)">
            <summary>
            JISX0208 61-70
            JIS제2수준한자
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_JISX0208_71_84(System.Char)">
            <summary>
            JISX0208 71-84
            JIS제2수준한자
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_PaygentKanaMark(System.Char)">
            <summary>
            Paygent 카나기호
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_PaygentPublicMark(System.Char)">
            <summary>
            Paygent 기본기호
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_PaygentBanKana(System.Char)">
            <summary>
            Paygent 미지원 카타카나
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_FullAlphaNumeric(System.Char)">
            <summary>
            Paygent 전각영역 체크
            - Paygent 전문에서 통용되는 전각 영역
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_PaygentHalfAlphaNumericKana(System.Char)">
            <summary>
            Paygent 반각영역 체크
            - Paygent 전문에서 통용되는 반각영숫자카나 영역
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_PaygentFullAlphaNumeric(System.String)">
            <summary>
            Paygent 전각영역 체크
            - Paygent 전문에서 통용되는 전각 영역
            - 히라가나 + 전각스페이스 + 제1,2종 한자 + 전각영문 + 전각숫자
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_PaygentHalfAlphaNumericKana(System.String)">
            <summary>
            Paygent 반각영역 체크
            - Paygent 전문에서 통용되는 반각영숫자카나 영역
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.Is_CheckByRules(System.String,JangBoGo.Extend.Language.LanguageFunction.CheckRules[])">
            <summary>
            검증로직에 모두 적합한지 체크 합니다.
            </summary>
            <param name="str">문자열</param>
            <param name="method">검증로직</param>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.JpConvert_FullToHalf(System.String)">
            <summary>
            전각문자를 반각문자로 변환
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.JpConvert_HalfToFull(System.String)">
            <summary>
            반각문자를 전각문자로 변환
            </summary>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.JpConvert_TargetRemoveBan(System.String,System.Func{System.Char,System.Boolean}[])">
            <summary>
            검증로직에 포함되지 않는 문자를 제거 합니다.
            </summary>
            <param name="str">문자열</param>
            <param name="method">검증로직</param>
        </member>
        <member name="M:JangBoGo.Extend.Language.LanguageFunction.JpConvert_TargetRemove(System.String,System.Func{System.Char,System.Boolean}[])">
            <summary>
            검증로직에 포함되는 문자를 제거합니다.
            </summary>
            <param name="str">문자열</param>
            <param name="method">검증로직</param>
        </member>
        <member name="P:JangBoGo.Info.CommonCodeModel.Model.CommonCodeItem.ParentCode">
            <summary>
            부모코드
            </summary>
        </member>
        <member name="P:JangBoGo.Info.CommonCodeModel.Model.CommonCodeItem.Code">
            <summary>
            코드
            </summary>
        </member>
        <member name="P:JangBoGo.Info.CommonCodeModel.Model.CommonCodeItem.CodeNameAdmin">
            <summary>
            코드명 - 관리자용 (모국어)
            </summary>
        </member>
        <member name="P:JangBoGo.Info.CommonCodeModel.Model.CommonCodeItem.CodeNameUser">
            <summary>
            코드명 - 고객용 (현지어)
            </summary>
        </member>
        <member name="P:JangBoGo.Info.CommonCodeModel.Model.CommonCodeItem.JoinerId">
            <summary>
            JoinerId
            Adprint, Makumaku 는 0
            </summary>
        </member>
        <member name="P:JangBoGo.Info.FrexResponseDetail.Model.FrexResponseDetailItem.IsFail">
            <summary>
            지정시간동안(70분) 처리 실패한 건으로 Line Notify 전송 대상
            </summary>
        </member>
        <member name="P:JangBoGo.Info.MailingTarget.Model.MailingSummaryVO.MailingId">
            <summary>
            <see cref="P:JangBoGo.Mailing.Model.MailingDbItem.Id"/>
            </summary>
        </member>
        <member name="P:JangBoGo.Info.MailingTarget.Model.MailingSummaryVO.AllCount">
            <summary>
            전체건수
            </summary>
        </member>
        <member name="P:JangBoGo.Info.MailingTarget.Model.MailingSummaryVO.OpenCount">
            <summary>
            전체건수 중 오픈 수
            </summary>
        </member>
        <member name="P:JangBoGo.Info.MailingTarget.Model.MailingSummaryVO.SendSuccessedCount">
            <summary>
            전체건수 중 발송 성공 수
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Delete``1(``0)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 삭제 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Delete``1(System.Int32)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 ID 값으로 삭제 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Delete``1(System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 삭제 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
        </member>
        <!-- "M:JangBoGo.Info.Object.ICommonObjectDao.DeleteById``1(System.Object)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.ExecuteNonQuery(System.String)">
            <summary>
            쿼리문을 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.ExecuteNonQuery(JangBoGo.Info.Object.ExecuteQuery)">
            <summary>
            실행쿼리를 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="executeQuery">실행쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.ExecuteNonQuery(System.String,JangBoGo.Info.Object.DbParam)">
            <summary>
            쿼리문을 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.ExecuteScalar(System.String)">
            <summary>
            쿼리문을 ExecuteScalar 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.ExecuteScalar(System.String,JangBoGo.Info.Object.DbParam)">
            <summary>
            쿼리문을 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindAll``1(System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="select">선택적 SEELCT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindItem``1(JangBoGo.Info.Object.ObjectQuery)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="objectQuery">쿼리객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindItem``1(System.Func{``0,System.Object},System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindItem``1(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindItem``1(JangBoGo.Info.Object.AbstractItemQuery{``0},Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="itemQuery">아이템쿼리 객체</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindItem``1(``0,System.Func{``0,System.Object},System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE절의 값을 꺼내 씁니다.</param>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindItemById``1(System.Object,System.Func{``0,System.Object},Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="id">ID 값</param>
            <param name="select">선택적 SELECT 힌트</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindList``1(JangBoGo.Info.Object.ObjectQuery)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindList``1(System.Func{``0,System.Object},System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindList``1(System.String,Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">쿼리문</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindList``1(JangBoGo.Info.Object.DbParam,System.Type)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="param">파라메터 객체</param>
            <param name="queryEnum">쿼리위치 타입</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindList``1(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindList``1(JangBoGo.Info.Object.AbstractListQuery{``0},Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트 쿼리 객체</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindListByIds``1(System.Collections.IList,System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 데이터를 Id기준으로 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="ids">Id 값의 배열</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.FindRowNumList``1(JangBoGo.Info.Object.AbstractListQuery{``0},System.Int32,System.Int32)">
            <summary>
            <typeparamref name="T"/> ROW_NUMBER() 가 포함된 페이징 된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="startNum">시작번호</param>
            <param name="endNum">종료번호</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.GetAllColumns(System.String)">
            <summary>
            테이블의 모든 컬럼명을 가져옵니다.
            <para>연결자는 INFORMATION_SCHEMA 권한이 있어야 합니다.</para>
            </summary>
            <param name="tableName">테이블명</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.GetCount(System.String)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.GetCount(JangBoGo.Info.Object.CountQuery)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="countQuery">카운트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.GetCount(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.GetCountByListQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0})">
            <summary>
            데이터의 수를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="listQuery">리스트 쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Insert(System.String,JangBoGo.Info.Object.DbParam)">
            <summary>
            데이터를 추가 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Insert(System.String,JangBoGo.Info.Object.DbParam,System.Boolean)">
            <summary>
            데이터를 추가 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="param">파라메터 객체</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Insert``1(``0)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Insert``1(``0,System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Insert``1(System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="into">선택적 INTO 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Insert``1(``0,System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
            <param name="into">선택적 INTO 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.IsTest">
            <summary>
            현재 DAO가 테스트 DB를 연결하는지 확인합니다.
            </summary>
            <returns>테스트DB여부</returns>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.PagingJsonResult``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 하고 JsonReuslt로 변환 리턴 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.ObjectQuery,JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">쿼리 객체</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.ObjectQuery,JangBoGo.Model.Param.Common.IPagingParam,System.String,System.String)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
            <param name="orderByColumn">정렬 컬럼</param>
            <param name="sort">정렬 방식</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Info.Object.CountQuery,JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="countQuery">카운트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam,System.String,System.String)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
            <param name="orderByColumn">정렬 컬럼</param>
            <param name="sort">정렬 방식</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Procedure(JangBoGo.Info.Object.ExecuteQuery)">
            <summary>
            프로시져를 호출 합니다.
            </summary>
            <param name="query">실행쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Query(JangBoGo.Info.Object.ExecuteQuery)">
            <summary>
            쿼리를 실행합니다.
            </summary>
            <param name="query">실행쿼리 객체</param>
            <returns>ExecuteNonQuery 실행 결과</returns>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Query(JangBoGo.Info.Object.CountQuery)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="query">카운트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Query``1(JangBoGo.Info.Object.ObjectQuery)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Query``1(JangBoGo.Info.Object.PagingListQuery{``0})">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">페이징리스트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Query``1(JangBoGo.Info.Object.AbstractItemQuery{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="query">아이템쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Query``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객치</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Update(System.String,System.String,System.Object,System.Int32)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="idFieldName">ID필드명</param>
            <param name="obj">업데이트 대상 파라메터 객체</param>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Update(System.String,System.String,JangBoGo.Info.Object.DbParam,System.Int32)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="idFieldName">ID필드명</param>
            <param name="param">업데이트 대상 파라메터 객체</param>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Update``1(``0)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
        </member>
        <!-- "M:JangBoGo.Info.Object.ICommonObjectDao.Update``1(``0,System.Boolean)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Update``1(System.Func{``0,System.Object},System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="set">선택적 SET 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ICommonObjectDao.Update``1(``0,System.Func{``0,System.Object},System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="set">선택적 SET 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <!-- "M:JangBoGo.Info.Object.IObjectDao`1.Delete(System.Int32)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.Delete(`0)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 삭제 합니다.
            </summary>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE절의 값을 꺼내 씁니다.</param>
        </member>
        <!-- "M:JangBoGo.Info.Object.IObjectDao`1.DeleteById(System.Object)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindAll">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindById(System.Object)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindItem(JangBoGo.Info.Object.DbParam,System.Type)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindItemById(System.Object)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindList(System.Type)">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindList(JangBoGo.Info.Object.DbParam,System.Type)">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindList(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.FindListByIds(System.Collections.IList,System.Func{`0,System.Object})">
            <summary>
            <typeparamref name="T"/> 데이터를 Id기준으로 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="ids">Id 값의 배열</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.GetCount(System.Type)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.Insert(`0)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.Insert(`0,System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.Update(JangBoGo.Info.Object.DbParam,System.String,System.Boolean)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="param">파라메터</param>
            <param name="id">ID값</param>
            <param name="triggerOff">트리거 OFF여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.Update(JangBoGo.Info.Object.DbParam,System.Int32,System.Boolean)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="param">파라메터</param>
            <param name="id">ID값</param>
            <param name="triggerOff">트리거 OFF여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.Update(`0)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.IObjectDao`1.Update(`0,System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="T:JangBoGo.Info.Object.AdoTemplateName">
            <summary>
            SprintContext 에서 사용하는 AdoTemplate ID의 집합 입니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.CommonObjectDao">
            <summary>
            ADO.NET 데이터 액세스 객체를 위한 AdoDaoSupport를 상속받는 좀더 편의 기능이 추가된 클래스
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Delete``1(``0)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 삭제 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Delete``1(System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 삭제 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Delete``1(System.Int32)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 ID 값으로 삭제 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="id">ID 값</param>
        </member>
        <!-- "M:JangBoGo.Info.Object.CommonObjectDao.DeleteById``1(System.Object)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.ExecuteNonQuery(JangBoGo.Info.Object.ExecuteQuery)">
            <summary>
            실행쿼리를 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="executeQuery">실행쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.ExecuteNonQuery(System.String)">
            <summary>
            쿼리문을 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.ExecuteNonQuery(System.String,JangBoGo.Info.Object.DbParam)">
            <summary>
            쿼리문을 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.ExecuteScalar(System.String)">
            <summary>
            쿼리문을 ExecuteScalar 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.ExecuteScalar(System.String,JangBoGo.Info.Object.DbParam)">
            <summary>
            쿼리문을 ExecuteNonQuery 로 실행합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindAll``1(System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="select">선택적 SEELCT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(System.Func{``0,System.Object},System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(``0,System.Func{``0,System.Object},System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE절의 값을 꺼내 씁니다.</param>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(JangBoGo.Info.Object.AbstractItemQuery{``0},Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="itemQuery">아이템쿼리 객체</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(JangBoGo.Info.Object.ObjectQuery)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="objectQuery">쿼리객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItemById``1(System.Object,System.Func{``0,System.Object},Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="id">ID 값</param>
            <param name="select">선택적 SELECT 힌트</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(System.String,Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">쿼리문</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(System.Func{``0,System.Object},System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(JangBoGo.Info.Object.AbstractListQuery{``0},Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트 쿼리 객체</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(JangBoGo.Info.Object.ObjectQuery)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(JangBoGo.Info.Object.DbParam,System.Type)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="param">파라메터 객체</param>
            <param name="queryEnum">쿼리위치 타입</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindListByIds``1(System.Collections.IList,System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 데이터를 Id기준으로 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="ids">Id 값의 배열</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindRowNumList``1(JangBoGo.Info.Object.AbstractListQuery{``0},System.Int32,System.Int32)">
            <summary>
            <typeparamref name="T"/> ROW_NUMBER() 가 포함된 페이징 된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="startNum">시작번호</param>
            <param name="endNum">종료번호</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetAllColumns(System.String)">
            <summary>
            테이블의 모든 컬럼명을 가져옵니다.
            <para>연결자는 INFORMATION_SCHEMA 권한이 있어야 합니다.</para>
            </summary>
            <param name="tableName">테이블명</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetCount(JangBoGo.Info.Object.CountQuery)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="countQuery">카운트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetCount(JangBoGo.Info.Object.DbParam,System.Type)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="queryEnum">쿼리위치 타입</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetCount(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetCount(System.String)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetCountByListQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0})">
            <summary>
            데이터의 수를 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Insert``1(``0,System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
            <param name="into">선택적 INTO 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Insert``1(System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="into">선택적 INTO 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Insert``1(``0)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Insert``1(``0,System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Insert(System.String,JangBoGo.Info.Object.DbParam)">
            <summary>
            데이터를 추가 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Insert(System.String,JangBoGo.Info.Object.DbParam,System.Boolean)">
            <summary>
            데이터를 추가 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="param">파라메터 객체</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.IsTest">
            <summary>
            현재 DAO가 테스트 DB를 연결하는지 확인합니다.
            </summary>
            <returns>테스트DB여부</returns>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.PagingJsonResult``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 하고 JsonReuslt로 변환 리턴 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam,System.String,System.String)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
            <param name="orderByColumn">정렬 컬럼</param>
            <param name="sort">정렬 방식</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.ObjectQuery,JangBoGo.Model.Param.Common.IPagingParam,System.String,System.String)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
            <param name="orderByColumn">정렬 컬럼</param>
            <param name="sort">정렬 방식</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객치</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Info.Object.CountQuery,JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="countQuery">카운트쿼리 객체</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.PagingQuery``1(JangBoGo.Info.Object.ObjectQuery,JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">쿼리 객체</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Procedure(JangBoGo.Info.Object.ExecuteQuery)">
            <summary>
            프로시져를 호출 합니다.
            </summary>
            <param name="query">실행쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Query``1(JangBoGo.Info.Object.PagingListQuery{``0})">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">페이징리스트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Query``1(JangBoGo.Info.Object.AbstractItemQuery{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="query">아이템쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Query``1(JangBoGo.Info.Object.AbstractListQuery{``0})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">리스트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Query``1(JangBoGo.Info.Object.ObjectQuery)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Query(JangBoGo.Info.Object.ExecuteQuery)">
            <summary>
            쿼리를 실행합니다.
            </summary>
            <param name="query">실행쿼리 객체</param>
            <returns>ExecuteNonQuery 실행 결과</returns>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Query(JangBoGo.Info.Object.CountQuery)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="query">카운트쿼리 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Query``1(JangBoGo.Info.Object.AbstractListQuery{``0},JangBoGo.Model.Param.Common.IPagingParam)">
            <summary>
            <typeparamref name="T"/> 페이징 처리된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객치</param>
            <param name="paging">페이징 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Update``1(``0,System.Func{``0,System.Object},System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="set">선택적 SET 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Update``1(System.Func{``0,System.Object},System.Func{``0,System.Object},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="set">선택적 SET 힌트</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Update``1(``0,System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Update``1(``0)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Update(System.String,System.String,JangBoGo.Info.Object.DbParam,System.Int32)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="idFieldName">ID필드명</param>
            <param name="param">업데이트 대상 파라메터 객체</param>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Update(System.String,System.String,System.Object,System.Int32)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="tableName">테이블명</param>
            <param name="idFieldName">ID필드명</param>
            <param name="obj">업데이트 대상 파라메터 객체</param>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.ExecuteNonQuery(System.String,Spring.Data.Common.IDbParameters)">
            <summary>
            ExecuteNonQuery
            </summary>
            <param name="query">쿼리</param>
            <param name="parameters">파라메터</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(System.String,Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="query">쿼리문</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(System.String,Spring.Data.Common.IDbParameters,Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="query">쿼리문</param>
            <param name="parameters">파라메터</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(System.String,Spring.Data.Common.IDbParameters,Spring.Data.Generic.IRowMapper{``0})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">쿼리문</param>
            <param name="parameters">파라메터</param>
            <param name="rowMapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(``0,System.Func{``0,System.Object},System.Func{``0,System.Object})">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE절의 값을 꺼내 씁니다.</param>
            <param name="where">선택적 WHERE 힌트</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.AddTriggerOffQuery(System.Text.StringBuilder)">
            <summary>
            StringBuilder 객체에 TriggerOff 쿼리를 추가 합니다.
            </summary>
            <param name="sb">StringBuilder</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Delete(System.String,Spring.Data.Common.IDbParameters,System.Boolean)">
            <summary>
            데이터를 삭제 합니다.
            </summary>
            <param name="query">쿼리</param>
            <param name="param">파라메터</param>
            <param name="hasEncryptOrDecryptProperty">쿼리의 암복호화 함수의 포함여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindItem``1(System.String,Spring.Data.Common.IDbParameters,Spring.Data.Generic.IRowMapper{``0},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="query">쿼리문</param>
            <param name="parameters">파라메터</param>
            <param name="mapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
            <param name="hasEncryptOrDecryptProperty">쿼리의 암복호화 함수의 포함여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindList``1(System.String,Spring.Data.Common.IDbParameters,Spring.Data.Generic.IRowMapper{``0},System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="query">쿼리문</param>
            <param name="parameters">파라메터</param>
            <param name="rowMapper">IRowMapper, 전달되지 않으면 자동 생성합니다.</param>
            <param name="hasEncryptOrDecryptProperty">쿼리의 암복호화 함수의 포함여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindRowNumList``1(JangBoGo.Info.Object.AbstractListQuery{``0},System.Int32,System.Int32,System.String,System.String)">
            <summary>
            <typeparamref name="T"/> ROW_NUMBER() 가 포함된 페이징 된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="startNum">시작번호</param>
            <param name="endNum">종료번호</param>
            <param name="orderByColumn">정렬컬럼</param>
            <param name="sort">정렬방식</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.FindRowNumList``1(JangBoGo.Info.Object.ObjectQuery,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            <typeparamref name="T"/> ROW_NUMBER() 가 포함된 페이징 된 데이터를 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="listQuery">리스트쿼리 객체</param>
            <param name="startNum">시작번호</param>
            <param name="endNum">종료번호</param>
            <param name="orderByColumn">정렬컬럼</param>
            <param name="sort">정렬방식</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetCount(System.String,Spring.Data.Common.IDbParameters)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="query">쿼리</param>
            <param name="parameters">파라메터</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetCountByListQuery(JangBoGo.Info.Object.ObjectQuery)">
            <summary>
            쿼리객체 실행 결과의 전체 행 수를 가져 옵니다.
            </summary>
            <param name="query">쿼리객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.GetSetQuery(JangBoGo.Info.Object.DbParam)">
            <summary>
            Set절을 구성합니다.
            </summary>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Insert(System.String,Spring.Data.Common.IDbParameters,System.Boolean,System.Boolean)">
            <summary>
            데이터를 추가 합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="param">파라메터 객체</param>
            <param name="hasEncryptOrDecryptProperty">쿼리의 암복호화 함수의 포함여부</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.CommonObjectDao.Update(System.String,Spring.Data.Common.IDbParameters,System.Boolean,System.Boolean)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="param">파라메터</param>
            <param name="hasEncryptOrDecryptProperty">쿼리의 암복호화 함수의 포함여부</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="T:JangBoGo.Info.Object.CommonObjectDao.ColumnInfo">
            <summary>
            컬럼정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.Mapper.Helper.FieldInfo">
            <summary>
            ObjectMapper용 Property정보
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.Mapper.Helper.FieldInfo.FieldName">
            <summary>
            속성의 실제 ColumnName
            <para>속성에 NameChangeAttribute가 있으면 그 정보를 리턴한다. 없으면 프로퍼티명</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.Mapper.Helper.FieldInfo.PropertyInfo">
            <summary>
            프로퍼티정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.Mapper.MapperFactory">
            <summary>
            맵퍼를 생성하여 캐싱하며, 돌려줍니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.Mapper.MapperFactory.CreateMapper``1">
            <summary>
            <typeparamref name="T"/> 에 해당하는 IRowMapper를 생성 또는 가져 옵니다.
            </summary>
            <typeparam name="T">요소의 타입</typeparam>
            <returns>새로 생성하거나 캐싱된 IRowMapper를 반환합니다.</returns>
        </member>
        <member name="M:JangBoGo.Info.Object.Mapper.MapperFactory.CreateNewMapper``1">
            <summary>
            <typeparamref name="T"/> 에 해당하는 IRowMapper를 생성합니다.
            </summary>
            <typeparam name="T">요소의 타입</typeparam>
        </member>
        <member name="T:JangBoGo.Info.Object.Mapper.ScalarMapper`1">
            <summary>
            QueryWithRowMapper를 Scalar처럼 호출할 때 사용하는 Mapper
            </summary>
            <typeparam name="T">타입의 요소</typeparam>
        </member>
        <member name="T:JangBoGo.Info.Object.ObjectTableInfoHelper">
            <summary>
            객체의 데이터베이스 테이블 정보를 얻는 유틸리티 입니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectTableInfoHelper.GetTableInfo``1">
            <summary>
            <typeparamref name="T"/> 객체에서 테이블 정보를 가져 옵니다.
            <para>주의</para>
            TableInfoAttribute 특성이 선언되어 있지 않는경우 티쿤의 패턴에 의해 테이블 정보를 유추해 옵니다.
            </summary>
            <typeparam name="T">요소의 타입</typeparam>
        </member>
        <member name="T:JangBoGo.Info.Object.DecryptByKeyAttribute">
            <summary>
            조회 시, 양방향 암호를 풀어서 속성 값으로 바인딩 합니다.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.DecryptByKeyAttribute.Encoding">
            <summary>
            암호화 인코딩 방식 기본 Unicode
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.EncryptByKeyAttribute">
            <summary>
            입력, 수정, 삭제 시 양방향 암호화하여 저장하도록 합니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.HashbytesAttribute">
            <summary>
            입력, 수정, 삭제 시 단방향 암호화하여 저장하도록 합니다.
            조회 시, 암호화된 텍스트가 조회되도록 합니다.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.HashbytesAttribute.Algorithm">
            <summary>
            알고리즘 방식 기본 SHA2_512
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.IdColumnAttribute">
            <summary>
            Id 컬럼
            프로퍼티가 Identity 임을 나타냅니다.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.IdColumnAttribute.Autoincrement">
            <summary>
            자동증가 컬럼 여부
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.InsertIgnoreAttribute">
            <summary>
            입력 시, 해당 속성은 무시되도록 합니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.JsonParsingAttribute">
            <summary>
            입력, 수정, 삭제 시, 객체를 JsonString으로 변환하여 텍스트로 저장합니다.
            조회 시, JsonString을 객체로 변환하여 바인딩 합니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.NameChangedAttribute">
            <summary>
            객체의 속성명과 데이터베이스의 컬럼명이 다를 때, 사용하는 힌트 특성입니다.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.NameChangedAttribute.ChangedName">
            <summary>
            데이터페이스의 실제 컬럼 명
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.TableInfoAttribute">
            <summary>
            모델 객체와 데이터베이스 테이블을 매핑하기 위한 클래스
            <para></para>
            {TableName}DbItem, {TableName}Item 과 같은 형식으로 테이블명을 유추할 수 없을 때, 사용합니다.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.TableInfoAttribute.IdFieldName">
            <summary>
            ID 컬럼 명
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.TableInfoAttribute.IdFieldType">
            <summary>
            컬럼의 데이터 타입
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.TableInfoAttribute.IsIdentifier">
            <summary>
            자동증가컬럼 여부
            </summary>
        </member>
        <member name="P:JangBoGo.Info.Object.TableInfoAttribute.TableName">
            <summary>
            데이터베이스의 실제 테이블 명
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.UpdateIgnoreAttribute">
            <summary>
            수정 시, 해당 컬럼을 무시합니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.XmlParsingAttribute">
            <summary>
            입력, 수정, 삭제 시, 객체를 XmlString (nvarchar) 로 저장 합니다.
            조회 시, XmlString(nvarchar)를 객체로 변환하여 바인딩합니다.
            <para></para>
            컬럼의 데이터 유형이 xml인 경우 이 특성을 사용하지 마십시오.
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.CommonObjectMapper`1">
            <summary>
            IRowMapper 를 구현한 공통맵퍼
            </summary>
            <typeparam name="T">요소의타입</typeparam>
        </member>
        <member name="P:JangBoGo.Info.Object.ExecuteQuery.TriggerOff">
            <summary>
            회피가능트리거를 회피한다.
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.ObjectDao">
            <summary>
            ADO.NET 데이터 액세스 객체를 위한 CommonObjectDao 상속받는 좀더 편의 기능이 추가된 클래스
            </summary>
        </member>
        <member name="T:JangBoGo.Info.Object.ObjectDao`1">
            <summary>
            ADO.NET 데이터 액세스 객체를 위한 ObjectDao 상속받는 좀더 편의 기능이 추가된 클래스
            </summary>
            <typeparam name="T">테이블 요소의 타입</typeparam>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.Delete(`0)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 삭제 합니다.
            </summary>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE절의 값을 꺼내 씁니다.</param>
        </member>
        <!-- "M:JangBoGo.Info.Object.ObjectDao`1.Delete(System.Int32)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <!-- "M:JangBoGo.Info.Object.ObjectDao`1.DeleteById(System.Object)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindAll">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindById(System.Object)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindItem(System.Type)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindItem(JangBoGo.Info.Object.DbParam,System.Type)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindItemById(System.Object)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 id값으로 조회 합니다.
            </summary>
            <param name="id">ID 값</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindList(System.Type)">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindList(JangBoGo.Info.Object.DbParam,System.Type)">
            <summary>
            <typeparamref name="T"/> 모든 데이터를 조회합니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindList(JangBoGo.Info.Object.DbParam,System.String)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <param name="param">파라메터 객체</param>
            <param name="query">쿼리</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindListByIds(System.Collections.IList,System.Func{`0,System.Object})">
            <summary>
            <typeparamref name="T"/> 데이터를 Id기준으로 조회 합니다.
            </summary>
            <typeparam name="T">리스트 내의 요소의 형태</typeparam>
            <param name="ids">Id 값의 배열</param>
            <param name="select">선택적 SELECT 힌트</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.GetCount(System.Type)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="queryEnum">쿼리 Enum</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.Insert(`0)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.Insert(`0,System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 추가 합니다.
            </summary>
            <param name="item">제네릭의 객체, 이 객체에서 INTO 절의 값을 꺼내 씁니다.</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.Update(JangBoGo.Info.Object.DbParam,System.Int32,System.Boolean)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="param">파라메터</param>
            <param name="id">ID값</param>
            <param name="triggerOff">트리거 OFF여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.Update(JangBoGo.Info.Object.DbParam,System.String,System.Boolean)">
            <summary>
            데이터를 업데이트 합니다.
            </summary>
            <param name="param">파라메터</param>
            <param name="id">ID값</param>
            <param name="triggerOff">트리거 OFF여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.Update(`0)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.Update(`0,System.Boolean)">
            <summary>
            <typeparamref name="T"/> 데이터를 업데이트 합니다.
            </summary>
            <typeparam name="T">요소의 형태</typeparam>
            <param name="item">제네릭의 객체, 이 객체에서 WHERE, SET절의 값을 꺼내 씁니다.</param>
            <param name="triggerOff">트리거 OFF 여부</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindItem(System.String)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <param name="query">쿼리문</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindItem(System.String,Spring.Data.Common.IDbParameters)">
            <summary>
            <typeparamref name="T"/> 단일 데이터를 조회 합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="parameters">파라메터</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindList(System.String)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <param name="query">쿼리문</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.FindList(System.String,Spring.Data.Common.IDbParameters)">
            <summary>
            <typeparamref name="T"/> 데이터를 조회 합니다.
            </summary>
            <param name="query">쿼리문</param>
            <param name="parameters">파라메터</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.GetCount(System.String,Spring.Data.Common.IDbParameters)">
            <summary>
            쿼리를 실행하고 첫번째 행렬의 값을 가져 옵니다.
            </summary>
            <param name="query">쿼리</param>
            <param name="parameters">파라메터</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.GetSetQuery(JangBoGo.Info.Object.DbParam)">
            <summary>
            Set 절을 만듭니다.
            </summary>
            <param name="param">파라메터 객체</param>
        </member>
        <member name="M:JangBoGo.Info.Object.ObjectDao`1.ReplaceToTopN(System.String,System.Int32)">
            <summary>
            첫번째로 발견되는 SELECT 문자열을 SELECT TOP N 으로 변경합니다.
            </summary>
            <param name="queryBody"></param>
            <returns></returns>
        </member>
        <!-- "M:JangBoGo.Info.Object.Util.CodValueConverter.IsNullableProperty(System.Type)" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Info.Object.Util.QueryConverter.CanConvertPagingQuery(System.String)">
            <summary>
            PagingQuery에서 사용할 수 있는 SQL문인지 판단 (Count, Paging)
            </summary>
            <param name="query">SQL</param>
        </member>
        <member name="M:JangBoGo.Info.Object.Util.QueryConverter.GetCountQueryFromListQuery(System.String)">
             [개정이력]
             0. AS-IS 최초 코드
            
             1. COUNT Query시 Custom Rule을 적용하여 불필요한 SELECT 절과 마지막 ORDER BY 절을 제거하는 방식으로 구현 변경
                 @author simjh
                 @date 18.10.30
                 @issue #8126
                 @sample (!!!닫는주석은 붙여서 쓸것!!!)
                     SELECT /** TqReplace1:COUNT(1) AS cnt ** /
                         col1, col2, ......        ===> COUNT(1) AS cnt 로 치환
                         /** /TqReplace1 ** /
                     FROM    tbl1
                     INNER JOIN tbl2 ON ....
                     WHERE .....
                     /** TqReplace2 ** /
                     ORDER BY col1, col2 DESC, ......    ===> 치환대상이 없으므로 제거 대상
                     /** /TqReplace2 ** /
            
             2. ( ~~ ) 의 갯수로 최상위 FROM / ORDER BY를 찾아 Replace
                 * (UNION | MINUS) SQL인 경우 Exception처리 --> AS-IS 방식으로 동작!
                 @auhtor choidh / simjh
                 @date 18.11.12
        </member>
        <member name="M:JangBoGo.Info.Object.Util.QueryConverter.ReplaceToCountQuery(System.String,System.Text.RegularExpressions.Regex)">
            [#8126] COUNT Query시 불필요한 SELECT 절과 마지막 ORDER BY 절을 제거 하여 반환
            @author simjh
            @date 18.10.30
            @issue #8126
        </member>
        <member name="T:JangBoGo.Info.Object.Util.CodQueryUtil">
            <summary>
            쿼리생성을위한 유틸리티
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CodQueryUtil.IsPrimitiveType(System.Type)">
            <summary>
            COD에서 인지하는 기본 형식여부
            <para>기본형식</para>
            String, DateTime,
            IsValueType() 이면서
            IsPrimitive(Boolean, Byte, SByte, Int16, UInt16, Int32, UInt32, Int64, UInt64, IntPtr, UIntPtr, Char, Double, Single)
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CodQueryUtil.GetTableType(System.Type)">
            <summary>
            Database Table 을 유추 할 수 있는 Type 조회
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CodQueryUtil.SetTriggerOff(System.Text.StringBuilder)">
            <summary>
            쿼리 생성을위한 StringBuilder 양쪽에 트리거 회피를 위한 쿼리 추가
            </summary>
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CountQueryReplacer.CountQueryReplacer.RemoveSqlComment(System.String)">
            input 안에 SQL 주석 모두 제거
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CountQueryReplacer.CountQueryReplacer.IsUnionQuery(System.String)">
            UNION | UNION ALL | MINUS SQL 인지 여부 확인!
        </member>
        <member name="T:JangBoGo.Info.Object.Util.CountQueryReplacer.Replacer4ParenthesesRule">
            SQL 에서 sub-query 구문을 제외한 1depth FROM을 찾아서 변환
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CountQueryReplacer.Replacer4ParenthesesRule.IsUnionQuery(System.String)">
            UNION | UNION ALL | MINUS SQL 인지 여부 확인!
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CountQueryReplacer.Replacer4ParenthesesRule.isCleanFrom(System.String,System.Int32)">
            현재 index position이 ( ~~ ) 안에 포함있냐?
            ( ~~~ ) 안에 있으면 false
            ( ~~~ ) 밖에 있으면 true
        </member>
        <member name="M:JangBoGo.Info.Object.Util.CountQueryReplacer.Replacer4ParenthesesRule.GetAllIndexOf(System.String,System.String,System.StringComparison)">
            <summary>
            검색어가 포함된 모든 index를 반환
            </summary>
            <param name="text">원본 string</param>
            <param name="value">검색 keyword</param>
            <param name="comparisonType"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetPaygentAtmInfo(System.Int32,System.Int32)">
            <summary>
            Paygent Atm 입금정보 조회
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetPaygentConbiniInfo(System.Int32,System.Int32)">
            <summary>
            Paygent 편의점 입금정보 조회
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetPaygentAspBankNetInfo(System.Int32,System.Int32)">
            <summary>
            Paygent ASP Bank Net 입금정보 조회
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetPaygentCreditCardInfo(System.Int32,System.Int32)">
            <summary>
            Paygent Credit Card 입금정보 조회
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetZeusConbiniInfo(System.Int32,System.Int32)">
            <summary>
            Zeus 편의점 입금정보 조회
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetZeusBankInfo(System.Int32,System.Int32)">
            <summary>
            Zeus 편의점 입금정보 조회
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetZeuCreditCardInfo(System.Int32,System.Int32)">
            <summary>
            Zeus 신용카드 입금정보 조회
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.PgPaymentInfo.Dao.PgPaymentInfoDao.GetPgCommonInfo(System.Int32,System.Int32)">
            <summary>
            PG Commoon 정보
            </summary>
            <param name="intOrdernum"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="P:JangBoGo.Info.PgPaymentInfo.Model.AbstractPgPaymentVO.IsLink">
            <summary>
            링크타입여부
            </summary>
        </member>
        <member name="P:JangBoGo.Info.PgPaymentInfo.Model.AbstractPgPaymentVO.IsPopup">
            <summary>
            링크가 팝업이나 iframe 으로 열려야 하는지 여부
            </summary>
        </member>
        <member name="P:JangBoGo.Info.PgPaymentInfo.Model.AbstractPgPaymentVO.LimitDateTime">
            <summary>
            컨버팅된 지불만료일시
            </summary>
        </member>
        <member name="P:JangBoGo.Info.PgPaymentInfo.Model.AbstractPgPaymentVO.IsInValidReq">
            <summary>
            PG요청 유효여부 - 유효하지 않으면 PG사에 재 요청해야 합니다.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.PgPaymentInfo.Model.AbstractPgPaymentVO.InvalidReqComplete">
            <summary>
            PG사 비요청여부
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.PgCommonVO">
            <summary>
            Zeus 신용카드 입금 정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.ZeusCreditCardVO">
            <summary>
            Zeus 신용카드 입금 정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.ZeusBankVO">
            <summary>
            Zeus 은행 입금 정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.ZeusConbiniVO">
            <summary>
            Zeus 편의점 입금 정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.PaygentCreditCardVO">
            <summary>
            Credit Card 입금 정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.PaygentAspBankNetVO">
            <summary>
            ASP Bank Net 편의점 입금 정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.PaygentConbiniVO">
            <summary>
            Paygnet 편의점 입금 정보
            </summary>
        </member>
        <member name="T:JangBoGo.Info.PgPaymentInfo.Model.PaygentAtmVO">
            <summary>
            Paygnet ATM 입금 정보
            </summary>
        </member>
        <member name="M:JangBoGo.Info.SeoTitle.Dao.ISeoTitleDao.FindListByUrlPath(System.Int32,System.String)">
            <summary>
            url 경로로 Seo 정보조회
            </summary>
            <param name="joinerId"></param>
            <param name="urlPath"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.SeoTitle.Dao.ISeoTitleDao.DeleteById(System.Int32,System.Int32)">
            <summary>
            삭제
            </summary>
            <param name="joinerId"></param>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.ZeusCombiniResult.Dao.IZeusCombiniResultDao.ExistsRequestInfo(System.Int32,System.String)">
            <summary>
            요청정보가 있는지 확인한다.
            </summary>
            <param name="orderId"></param>
            <param name="siteCode"></param>
            <returns></returns>
        </member>
        <member name="P:JangBoGo.Info.FrexRequest.Model.FrexRequestDbItem.Request">
            <summary>
            Set 은 SetReqeust(XDocument) 메서드를 사용하세요.
            전송후 삭제됨. RequestSafeInfo에 고객정보 제외하고 저장됨.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.FrexRequest.Model.FrexRequestDbItem.RequestSafeInfo">
            <summary>
            Set 은 SetReqeust(XDocument) 메서드를 사용하세요.
            보안을 위해 고객 정보를 제외하고 저장됨.
            </summary>
        </member>
        <member name="P:JangBoGo.Info.FrexStateInfo.Model.FrexStateInfoDbItem.RegState">
            <summary>
            STANDBY, COMPLETE, CANCEL
            </summary>
        </member>
        <member name="P:JangBoGo.Info.FrexStateInfo.Model.FrexStateInfoDbItem.ResultState">
            <summary>
            STANDBY, COMPLETE, COMPLETE, CANCEL
            </summary>
        </member>
        <member name="P:JangBoGo.Info.FrexStateInfo.Model.FrexStateInfoDbItem.AuthorizeState">
            <summary>
            STANDBY, COMPLETE, COMPLETE, CANCEL
            </summary>
        </member>
        <member name="P:JangBoGo.Info.FrexStateInfo.Model.FrexStateInfoDbItem.BillingState">
            <summary>
            STANDBY, COMPLETE, COMPLETE, CANCEL
            </summary>
        </member>
        <member name="M:JangBoGo.Info.FrexStateInfo.Query.FrexStateInfoQuery.RollBackToOrderResultByNpTransactionIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            BILLING_REG / DELETE_REG 단계의 상태를 ORDER_RESULT 상태로 되돌린다!
            </summary>
            <param name="npTransactionIds"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.FrexStateInfo.Query.FrexStateInfoQuery.DeleteFrexStateInfoByOrderIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ORDER_REG 상태의 데이터를 삭제하여 Rollback 시킨다!
            </summary>
            <param name="mineShopIds"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Info.FrexStateInfo.Query.FrexStateInfoQuery.RollBackToOrderResultByOrderIds(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            UPDATE_REG 단계의 상태를 ORDER_RESULT 상태로 되돌린다!
            </summary>
            <param name="orderIds"></param>
            <returns></returns>
        </member>
        <member name="T:JangBoGo.Info.PaygentRequestPaymentCheck.Model.PaygentRequestCheckSimpleInfoItem">
            <summary>
            Paygent요청확인간단정보 - 전표처리 조회용
            </summary>
        </member>
        <member name="M:JangBoGo.Info.PaygentRequestPaymentCheck.Query.PaygentRequestPaymentCheckQuery.Exists(System.Int32,System.String)">
            <summary>
            기저장여부확인
            </summary>
            <param name="paygentRequestId">Paygent요청id</param>
            <param name="paymentNoticeId">전표통지ID</param>
        </member>
        <member name="M:JangBoGo.Info.PaygentRequestPaymentCheck.Query.PaygentRequestPaymentCheckQuery.FindPaygentCheckSimpleInfo(System.Int32)">
            <summary>
            Paygent요청확인처리용 간단 정보조회
            </summary>
        </member>
        <member name="M:JangBoGo.Info.PaygentRequestPaymentCheck.Query.PaygentRequestPaymentCheckQuery.FindListCheckFailureList(System.String[])">
            <summary>
            전표처리실패내역조회
            <param name="expectSiteCode">제외대상 사이트코드</param>
            </summary>
        </member>
        <member name="M:JangBoGo.Info.PaygentRequestPaymentCheck.Query.PaygentRequestPaymentCheckQuery.FindListMakumakuCheckFailureList">
            <summary>
            전표처리실패내역조회 - 마쿠마쿠
            </summary>
        </member>
        <member name="M:JangBoGo.Info.PaygentRequestPaymentCheck.Query.PaygentRequestPaymentCheckQuery.UpdateCheckedYn(System.Int32,System.String)">
            <summary>
            처리여부 업데이트
            </summary>
        </member>
        <member name="M:JangBoGo.Info.PaygentRequest.Query.PaygentRequestQuery.FindLatestItemByTradingId(System.String)">
            <summary>
            최근Paygent요청내역조회
            </summary>
            <param name="trading_id">결제ID</param>
        </member>
        <member name="M:JangBoGo.Info.StoredFile.Query.StoredFileQuery.FindByTypeAndFileName(System.String,System.String)">
            <summary>
            고객 입고 파일 삭제 시 사용 ( fileName은 orderItemCode입니다. ) 
            </summary>
        </member>
        <member name="P:JangBoGo.Info.ZipCode.Model.ZipCodeSearchItem.FullAddress">
            <summary>
            전체주소
            </summary>
        </member>
        <member name="P:JangBoGo.Info.ZipCode.Model.ZipCodeSearchItem.FullAddress2">
            <summary>
            전체주소2
            <para>주소의 표기형식이 n개 이상일 때, 그중 다른 1건을 표시하기 위한 용도</para>
            </summary>
        </member>
        <member name="M:JangBoGo.Info.ZipCode.Query.ZipCodeQuery.FindItemWithGoodsId(System.String,System.Int32[])">
            <summary>
            우편번호 조회 with GoodsId
            이용사에서 상품별 설정된 대인가능여부, 시간지정여부, 배송추가금액 정보를 가져온다.
            상품번호가 없는경우 우편번호 테이블의 기본값을 가져온다.
            반드시 COD 로 실행 할것(CODJ 아님)
            </summary>
        </member>
        <member name="M:JangBoGo.Info.ZipCode.Query.ZipCodeQuery.FindItem(System.String)">
            <summary>
            우편번호 조회
            </summary>
        </member>
        <member name="M:JangBoGo.Info.ZipCode.Query.ZipCodeQuery.FirstItem">
            <summary>
            우편번호가 없을때 기본 처리를 위해 첫번째 우편번호 조회
            </summary>
        </member>
        <member name="P:JangBoGo.Messenger.LineNotify.LineNotifyTokens.TestKJH">
            <summary>
            김정훈 개인
            </summary>
        </member>
        <member name="P:JangBoGo.Messenger.LineNotify.LineNotifyTokens.TestKEH">
            <summary>
            고은혜 개인
            </summary>
        </member>
        <!-- "P:JangBoGo.Messenger.LineNotify.LineNotifyTokens.PSOH" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="P:JangBoGo.Messenger.LineNotify.LineNotifyTokens.Uwanguk">
            <summary>
            우왕굿
            </summary>
        </member>
        <member name="F:JangBoGo.Messenger.LineNotify.LineNotifyTokens.NotifyService">
            <summary>
            개발본부-알림체크방
            </summary>
        </member>
        <member name="F:JangBoGo.Messenger.LineNotify.LineNotifyTokens.Tqoon">
            <summary>
            티쿤글로벌
            </summary>
        </member>
        <member name="F:JangBoGo.Messenger.LineNotify.LineNotifyTokens.BooksRquest">
            <summary>
            도서구매
            </summary>
        </member>
        <member name="P:JangBoGo.Messenger.LineNotify.LineNotifyTokens.BlackPet">
            <summary>
            심재호 개인
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Entity.ExcelUploadResultInfo.NewInserItemCnt">
            <summary>
            새로 등록할 데이터 건수
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Entity.ExcelUploadResultInfo.ModifyItemCnt">
            <summary>
            수정할 데이터 건수
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Entity.ExcelUploadResultInfo.NotChangedItemCnt">
            <summary>
            아무 것도 하지 않는 데이터 건수
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.IPagingParam.PageSize">
            <summary>
            페이지당 리스트 수
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.IPagingParam.Page">
            <summary>
            현재 페이지
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.IPagingParam.TotalPage">
            <summary>
            총 페이지수
            </summary>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.IPagingParam.GetStartRowNum">
            <summary>
            Paging 조회용 Row 시작 점
            </summary>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.IPagingParam.GetEndRowNum">
            <summary>
            Paging 조회용 Row 끝 점
            </summary>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.IPagingParam.GetStartIndex">
            <summary>
            List Type Start Index
            </summary>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.IPagingParam.RangeCount(System.Int32)">
            <summary>
            List Type Index 개수
            </summary>
            <param name="totalCount"></param>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingParam.PageSize">
            <summary>
            페이지당 리스트 수
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingParam.Page">
            <summary>
            현재 페이지
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingParam.TotalPage">
            <summary>
            총 페이지수
            </summary>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.PagingParam.GetStartRowNum">
            <summary>
            Paging 조회용 Row 시작 점
            </summary>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.PagingParam.GetEndRowNum">
            <summary>
            Paging 조회용 Row 끝 점
            </summary>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.PagingParam.GetStartIndex">
            <summary>
            List Type Start Index
            </summary>
        </member>
        <member name="M:JangBoGo.Model.Param.Common.PagingParam.RangeCount(System.Int32)">
            <summary>
            List Type Range Count
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingResult`1.List">
            <summary>
            조회결과 List
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingResult`1.Paging">
            <summary>
            페이징 조회 조건
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingResult`1.CurrentPage">
            <summary>
            현재 페이지
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingResult`1.TotalPage">
            <summary>
            총 페이지수
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingResult`1.CurrentPageSize">
            <summary>
            현재 페이지당 MaxRow수
            </summary>
        </member>
        <member name="P:JangBoGo.Model.Param.Common.PagingResult`1.TotalCount">
            <summary>
            전제 Row 수
            </summary>
        </member>
        <!-- "T:JangBoGo.Payment.Frex.Service.FrexResponseDetail.FrexResponseDetailDistributor" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.Payment.Frex.Service.FrexStateInfo.IFrexStateInfoResultStateChangeService.RollBackToOrderResultByNpTransactionIdList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            BILLING_REG / DELETE_REG 단계의 상태를 ORDER_RESULT 상태로 되돌린다!
            </summary>
            <param name="npIds"></param>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexStateInfo.IFrexStateInfoResultStateChangeService.DeleteFrexStateInfoByOrderIdList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ORDER_REG 상태의 데이터를 삭제하여 Rollback 시킨다!
            </summary>
            <param name="orderIds"></param>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexStateInfo.IFrexStateInfoResultStateChangeService.RollBackToOrderResultByOrderIdList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            UPDATE_REG 단계의 상태를 ORDER_RESULT 상태로 되돌린다!
            </summary>
            <param name="orderIds"></param>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexStateInfo.FrexStateInfoResultStateChangeService.RollBackToOrderResultByNpTransactionIdList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            BILLING_REG / DELETE_REG 단계의 상태를 ORDER_RESULT 상태로 되돌린다!
            </summary>
            <param name="npIds"></param>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexStateInfo.FrexStateInfoResultStateChangeService.DeleteFrexStateInfoByOrderIdList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            ORDER_REG 상태의 데이터를 삭제하여 Rollback 시킨다!
            </summary>
            <param name="orderIds"></param>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexStateInfo.FrexStateInfoResultStateChangeService.RollBackToOrderResultByOrderIdList(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            UPDATE_REG 단계의 상태를 ORDER_RESULT 상태로 되돌린다!
            </summary>
            <param name="orderIds"></param>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.Worker.ResponseDetail.ResponseDetailService.OrderResult">
            <summary>
            FrexRequest의 ORDER_RESULT Response 를 FrexResponseDetail 에 건별로 저장!
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexRequest.TransCompleteFrexRequestFinder.GetOrderResultResponseDetailList">
            <summary>
            FrexResponseDetail 에서 ORDER_RESULT 건 조회
            </summary>
            <date>19.09.05</date>
            <author>simjh</author>
            <issue>#10415</issue>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexRequest.TransCompleteFrexRequestFinder.GetUpdateResultResponseDetailList">
            <summary>
            FrexResponseDetail 에서 UPDATE_RESULT 건 조회
            </summary>
            <date>19.09.09</date>
            <author>simjh</author>
            <issue>#10415</issue>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexRequest.TransCompleteFrexRequestFinder.GetDeleteResultResponseDetailList">
            <summary>
            FrexResponseDetail 에서 DELETE_RESULT 건 조회
            </summary>
            <date>19.09.09</date>
            <author>simjh</author>
            <issue>#10415</issue>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexRequest.TransCompleteFrexRequestFinder.GetAuthorizeResultResponseDetailList">
            <summary>
            FrexResponseDetail 에서 AUTHORIZE_RESULT 건 조회
            </summary>
            <date>19.09.09</date>
            <author>simjh</author>
            <issue>#10415</issue>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Frex.Service.FrexRequest.TransCompleteFrexRequestFinder.GetBillingResultResponseDetailList">
            <summary>
            FrexResponseDetail 에서 BILLING_RESULT 건 조회
            </summary>
            <date>19.09.09</date>
            <author>simjh</author>
            <issue>#10415</issue>
            <returns></returns>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_MODI_REQUEST">
            <summary>
            Paygent EMoney 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_MODI_REQUEST.payment_amount">
            <summary>
            거래금액 총액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_MODI_REQUEST.reduction_flag">
            <summary>
            0이면 보정후 금액
            1이면 감액 금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_MODI_REQUEST.d3secure_ryaku">
            <summary>
            3D보안사용여부
            미계약시 "1"을 반드시 지정
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem">
            <summary>
            Paygent 전표통지 Item
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem.ConvertToXDocument">
            <summary>
            XDocument 으로 변환
            </summary>
            <param name="item">Paygent 전표 통지</param>
            <returns>XDocument</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem.ConvertToQueryString">
            <summary>
            QueryString 으로 변환
            </summary>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem.GetParamKeyAttributeValue(System.String)">
            <summary>
            Get Param Element 'key' Attribute Value
            </summary>
            <param name="prop">프로퍼티</param>
            <returns></returns>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.FullAlphaNumeric">
            <summary>
            全角
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.HalfAlphaNumeric">
            <summary>
            半角英数ｶﾅ
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.HalfEngNum">
            <summary>
            半角英数
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.HalfEngNumMark">
            <summary>
            半角英数記号
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.HalfEngNumMarkDash">
            <summary>
            半角英数字と「-」
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.HalfNum">
            <summary>
            半角数字
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.HalfNumMark">
            <summary>
            半角数字記号
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType.FullOrHalfLine">
            <summary>
            全・半角文字と改行
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentConstants.CARD_EXPIRE_AUTHORIZE_DAY_LOCAL">
            <summary>
            카드 권한취득 만료일 - 국내
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentConstants.CARD_EXPIRE_AUTHORIZE_DAY_ABROAD">
            <summary>
            카드 권한취득 만료일 - 국외
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND">
            <summary>
            Paygent 전문종별코드
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_ATM_REQUEST">
            <summary>
            ATM 결제 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARD_REQUEST">
            <summary>
            카드결제 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARD_CANCEL">
            <summary>
            카드결제 신청취소
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARD_SALES_REQUSET">
            <summary>
            카드결제 매출 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARD_SALES_CANCEL">
            <summary>
            카드결제 매출 신청취소
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARD_MODI_REQUEST">
            <summary>
            카드결제 보정 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARD_SALES_MODI_REQUEST">
            <summary>
            카드결제 매출 보정 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARDINFO_SET_REQUEST">
            <summary>
            카드정보 설정
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARDINFO_SET_REMOVE">
            <summary>
            카드정보 제거
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARDINFO_SET_SEARCH">
            <summary>
            카드정보 조회
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_CARDSALES_CONTINUE_CHARGING">
            <summary>
            카드계속과금매출
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_KONBINI_N_REQUEST">
            <summary>
            편의점결제 신청 (번호방식)
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_KONBINI_P_REQUEST">
            <summary>
            편의점결제 신청 (불입표방식)
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_BANK_NET_PAYMENT_REQUEST">
            <summary>
            은행 네트 결제 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_BANK_ASP_PAYMENT_REQUEST">
            <summary>
            은행 ASP 결제 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_VIRTUAL_ACCOUNT_REQUEST">
            <summary>
            가상계좌결제 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_GENERAL_PAYMENT_INFO_DIFF_SEARCH">
            <summary>
            결제정보 차등조회
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_GENERAL_PAYMENT_INFO_SEARCH">
            <summary>
            결제정보 조회
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_FILE_REQUEST">
            <summary>
            파일결제 요청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_FILE_RESULT_SEARCH">
            <summary>
            파일결제 결과 조회
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_PAYPAL_REQUEST">
            <summary>
            PayPal결제 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_PAYPAL_SALES">
            <summary>
            PayPal결제 매출
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_PAYPAL_CANCEL">
            <summary>
            PayPal결제 취소
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_PAYPAL_SALES_MODI_REQUEST">
            <summary>
            PayPal결제 보정 매출 요청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_EMONEY_REQUEST">
            <summary>
            전자화폐결제 신청
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_EMONEY_CANCEL">
            <summary>
            전자화폐결제 취소
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND.TELEGRAM_EMONEY_SALES_MODI_REQUEST">
            <summary>
            전자화폐결제 보정 매출 요청
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND_B2BLINK">
            <summary>
            Paygent B2BLINK형 전문종별코드
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND_B2BLINK.TELEGRAM_CARD_REQUEST">
            <summary>
            카드결제 신청
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS">
            <summary>
            Paygent 카드지불구분
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS.OUT_OF_POCKET">
            <summary>
            일시불
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS.BOUNS_1">
            <summary>
            보너스1회
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS.DIVISION">
            <summary>
            분할
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS.ROTATION">
            <summary>
            회전
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS_B2BLINK">
            <summary>
            Paygent B2BLINK형 카드지불구분
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS_B2BLINK.OUT_OF_POCKET">
            <summary>
            일시불
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS_B2BLINK.ALL">
            <summary>
            카드 결제방식 모두지원
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_CARD_PAYMENT_CLASS_B2BLINK.ALL_BUT_BOUNS">
            <summary>
            카드 결제방식 보너스를 제외하고 모두지원
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID">
            <summary>
            Paygent 편의점 편의점기업코드
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.SEICO">
            <summary>
            セイコーマート
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.LAWSON">
            <summary>
            ローソン
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.MINISTOP">
            <summary>
            ミニストップ
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.SUNKUS">
            <summary>
            サンクス
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.CIRCLEK">
            <summary>
            サークルK
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.DAILY_YAMAZAKI">
            <summary>
            デイリーヤマザキ
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.SEJ">
            <summary>
            セブンイレブン
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CVS_COMPANY_ID.FAMILY">
            <summary>
            ファミリーマート
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_SERVICE_TYPE">
            <summary>
            Paygent 편의점 서비스구분
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_SERVICE_TYPE.NONE">
            <summary>
            없음
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_SERVICE_TYPE.TICKETING_PRICE">
            <summary>
            발권 (대금 지불 있음)
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_SERVICE_TYPE.TICKETING_ONLY">
            <summary>
            발권만
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_SERVICE_TYPE.PRICE_STORAGE">
            <summary>
            수납대행
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CUSTOMER_TEL_TYPE">
            <summary>
            Paygent 편의점 고객전화구분
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CUSTOMER_TEL_TYPE.HOUSE">
            <summary>
            집
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CUSTOMER_TEL_TYPE.PAGER">
            <summary>
            호출기
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CUSTOMER_TEL_TYPE.DORM">
            <summary>
            기숙사
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_KONBINI_PAYMENT_CUSTOMER_TEL_TYPE.CELL">
            <summary>
            휴대
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_PAYMENT_PC_MOBILE_TYPE">
            <summary>
            Paygent BANK NET PC-Mobile구분
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_PAYMENT_PC_MOBILE_TYPE.PC">
            <summary>
            PC
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_PAYMENT_PC_MOBILE_TYPE.MB_DOCOMO">
            <summary>
            모바일 docomo
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_PAYMENT_PC_MOBILE_TYPE.MB_AU">
            <summary>
            모바일 au
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_PAYMENT_PC_MOBILE_TYPE.MB_SOFTBANK">
            <summary>
            모바일 softbank
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_PAYMENT_PC_MOBILE_TYPE.SMART_PHONE">
            <summary>
            스마트폰
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_STRING_TYPE">
            <summary>
            Paygnet 전문 문자 타입
            문자제한 타입
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_STRING_TYPE.HARF_NUMBER">
            <summary>
            반각숫자
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_STRING_TYPE.EM">
            <summary>
            전각
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_STRING_TYPE.ALPHANUMERIC_KANA">
            <summary>
            반각카타카나
            반각 - 영어, 숫자, 카나
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_STRING_TYPE.ALPHANUMERIC">
            <summary>
            반각영숫자
            반각 - 영어, 숫자
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_CARD_ACQ">
            <summary>
            Paygent 카트취급회사코드
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.Paygent_ACQ_CARD_KIND">
            <summary>
            취급카드종류
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentResult">
            <summary>
            Paygent 결제요청 처리 결과
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramResponse">
            <summary>
            Paygent 결제요청 응답
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramResponse.RESPONSE_HEADER_CODE">
            <summary>
            응답코드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramResponse.RESPONSE_HEADER_DETAIL">
            <summary>
            응답코드상세
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramResponse.RESPONSE_DICTIONARY_LIST">
            <summary>
            응답내용리스트
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramResponse.REQUEST_DICTIONARY">
            <summary>
            요청내용
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Model.PaygentTelegramResponse.Append_RESPONSE_DICTIONARY(System.Collections.IDictionary)">
            <summary>
            응답내용 추가
            </summary>
            <param name="dic">Paygent 에서 응답받은 RESPONSE IDictionary</param>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.SUCCESS">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_PARAM">
            <summary>
            전문 매개변수 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_CARD">
            <summary>
            카드관련 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_KONBINI">
            <summary>
            편의점관련 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_BANK_ASP">
            <summary>
            은행 ASP 관련 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_VIRTUAL">
            <summary>
            가상계좌 관련 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_FILE">
            <summary>
            파일 관련 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_PAYPAL">
            <summary>
            PayPal 관련 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_EMONEY">
            <summary>
            전자화폐 관련 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_UNKNOWN">
            <summary>
            오류이나 비지니스적으로 별도 대책을 세우지 않은 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_PAYGENT_CRASH">
            <summary>
            Paygent측 시스템 오류
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.ERROR_PAYGENT_TEMPORARY">
            <summary>
            Paygent측 시스템 오류 (재시도 가능)
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Model.PaygentResultStatus.EXCEPTION">
            <summary>
            시스템 오류
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentResponse">
            <summary>
            Paygent 결제요청 응답
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentResponse.RESPONSE_HEADER_CODE">
            <summary>
            응답코드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentResponse.RESPONSE_HEADER_DETAIL">
            <summary>
            응답코드상세
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentResponse.RESPONSE_DICTIONARY_LIST">
            <summary>
            응답내용리스트
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentResponse.REQUEST_DICTIONARY">
            <summary>
            요청내용
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Model.PaygentResponse.Append_RESPONSE_DICTIONARY(System.Collections.IDictionary)">
            <summary>
            응답내용 추가
            </summary>
            <param name="dic">Paygent 에서 응답받은 RESPONSE IDictionary</param>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestEmbeddedType">
            <summary>
            Paygent 요청 - 임베디드형
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestEmbeddedType.TELEGRAM_KIND">
            <summary>
            전문종별
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestEmbeddedType.TRADING_ID">
            <summary>
            판매자 거래 ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestEmbeddedType.PAYMENT_ID">
            <summary>
            Paygent결제요청응답번호
            결제정보조회 요청시만 사용
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM">
            <summary>
            Paygent ATM 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.payment_amount">
            <summary>
            결제금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.customer_family_name">
            <summary>
            고객 성
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.customer_name">
            <summary>
            고객 이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.customer_family_name_kana">
            <summary>
            고객 성(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.customer_name_kana">
            <summary>
            고객 이름(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.payment_detail">
            <summary>
            결제내용
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.payment_detail_kana">
            <summary>
            결제내용(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.payment_limit_date">
            <summary>
            지불기한
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_ATM.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP">
            <summary>
            Paygent 은행 ASP 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.amount">
            <summary>
            청구금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.claim_kana">
            <summary>
            청구내용 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.claim_kanji">
            <summary>
            청구내용 (한자)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.customer_family_name">
            <summary>
            고객 성
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.customer_name">
            <summary>
            고객 이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.customer_family_name_kana">
            <summary>
            고객 성 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.customer_name_kana">
            <summary>
            고객 이름 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.receipt_name_kana">
            <summary>
            수납기관이름 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.receipt_name">
            <summary>
            수납기관이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.return_url">
            <summary>
            반환 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.merchant_name">
            <summary>
            판매자 이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.banner_url">
            <summary>
            배너 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.free_memo">
            <summary>
            메모
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.asp_payment_term">
            <summary>
            지불기간
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.stop_return_url">
            <summary>
            처리 중단시 반환 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.copy_right">
            <summary>
            저작권
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_ASP.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET">
            <summary>
            Paygent 은행 NET 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.bank_code">
            <summary>
            수취인 금융 기관코드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.amount">
            <summary>
            청구 금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.claim_kana">
            <summary>
            청구내용 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.claim_kanji">
            <summary>
            청구내용 (한자)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.customer_family_name">
            <summary>
            고객 성
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.customer_name">
            <summary>
            고객 이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.customer_family_name_kana">
            <summary>
            고객 성 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.customer_name_kana">
            <summary>
            고객 이름 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.receipt_name_kana">
            <summary>
            수납기관이름 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.receipt_name">
            <summary>
            수납기관이름 (한자)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.pc_mobile_type">
            <summary>
            PC-Mobile 구분
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.return_url">
            <summary>
            반환 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.cancel_url">
            <summary>
            취소 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_BANK_NET.site_id">
            <summary>
            사이트 ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD">
            <summary>
            Paygent CARD 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.payment_amount">
            <summary>
            결제금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.card_number">
            <summary>
            카드번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.card_valid_term">
            <summary>
            카드유효기간
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.card_conf_number">
            <summary>
            카드확인번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.payment_class">
            <summary>
            지불구분
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.split_count">
            <summary>
            분할회수
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.d3secure_ryaku">
            <summary>
            3D보안사용여부
            미계약시 "1"을 반드시 지정
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.d3secure_use_type">
            <summary>
            3D보안 서비스 유형 (3D보안사용시)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.http_accept">
            <summary>
            HttpAccept (3D보안사용시)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.http_user_agent">
            <summary>
            HttpUserAgent (3D보안사용시)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.term_url">
            <summary>
            3D 보안 반환 URL (3D보안사용시)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.ref_trading_id">
            <summary>
            참조가맹점 거래 ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.stock_card_mode">
            <summary>
            카드정보보관모드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.customer_id">
            <summary>
            고객 ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.customer_telno">
            <summary>
            고객 Email
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.customer_Email">
            <summary>
            고객 Email
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.customer_card_id">
            <summary>
            고객카드ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.payment_detail">
            <summary>
            결제내용
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD.payment_detail_kana">
            <summary>
            결제내용(카타카나)
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_REMOVE">
            <summary>
            Paygent 카드정보제거
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_REMOVE.customer_id">
            <summary>
            고객ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_REMOVE.customer_card_id">
            <summary>
            고객카드ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_REMOVE.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SEARCH">
            <summary>
            Paygent 카드정보제거
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SEARCH.customer_id">
            <summary>
            고객ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SEARCH.customer_card_id">
            <summary>
            고객카드ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SEARCH.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET">
            <summary>
            Paygent 카드정보설정
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.customer_id">
            <summary>
            고객ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.card_number">
            <summary>
            카드번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.card_valid_term">
            <summary>
            카드유효기간
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.card_brand">
            <summary>
            카드브랜드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.cardholder_name">
            <summary>
            카드명의인
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.add_info1">
            <summary>
            추가정보1
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.add_info2">
            <summary>
            추가정보2
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.add_info3">
            <summary>
            추가정보3
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.add_info4">
            <summary>
            추가정보4
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.site_id">
            <summary>
            사이드ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARDINFO_SET.valid_check_flg">
            <summary>
            휴효성검사플래그
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_PRICE_MOD">
            <summary>
            Paygnet CARD 결제보정 권한요청
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_DEFAULT">
            <summary>
            Paygent 기본 요청
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_GENERAL_PAYMENT_INFO_DIFF_SEARCH">
            <summary>
            Paygent EMoney 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_GENERAL_PAYMENT_INFO_DIFF_SEARCH.payment_notice_id">
            <summary>
            전자 화폐 종별
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_GENERAL_PAYMENT_INFO_DIFF_SEARCH.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_EMONEY">
            <summary>
            Paygent EMoney 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_EMONEY.emoney_type">
            <summary>
            전자 화폐 종별
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_EMONEY.amount">
            <summary>
            결제 금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_EMONEY.return_url">
            <summary>
            접수 완료 알림URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_EMONEY.cancel_url">
            <summary>
            취소 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_EMONEY.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N">
            <summary>
            Paygent 편의점 요청 - 번호방식
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.payment_amount">
            <summary>
            결제금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.cvs_type">
            <summary>
            CVS 유형
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.customer_family_name">
            <summary>
            고객 성
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.customer_name">
            <summary>
            고객 이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.customer_family_name_kana">
            <summary>
            고객 성(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.customer_name_kana">
            <summary>
            고객 이름(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.customer_tel">
            <summary>
            고객전화번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.site_info">
            <summary>
            결제정보
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.payment_limit_date">
            <summary>
            지불기한
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.cvs_company_id">
            <summary>
            편의점기업코드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.sales_type">
            <summary>
            급여종별
            세븐일레븐필수
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.customer_notice">
            <summary>
            고객안내문 최대-10
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.service_type">
            <summary>
            서비스구분
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.ticket_start_date">
            <summary>
            발권 시작일
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.ticket_end_date">
            <summary>
            발권 종료일
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.ticket_num">
            <summary>
            티켓 매수 (최대 22)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.tNNtemplate">
            <summary>
            티켓 N번째 템플릿 (최대 22)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.tNNmaster">
            <summary>
            티켓 N번째 마스터 (최대 22)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.tNN_fieldNN">
            <summary>
            티켓 N번째 X번 필드 (X최대 20)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_N.tNN_fieldNN_align">
            <summary>
            티켓 N번째 X번 필드 정렬 (X최대 20)
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P">
            <summary>
            Paygent 편의점 요청 - 불입방식
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.payment_amount">
            <summary>
            결제금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.tax_class">
            <summary>
            세금범주
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.sales_tax_amount">
            <summary>
            소비세액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.site_info">
            <summary>
            결제정보
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.payment_limit_date">
            <summary>
            지불기한
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.bill_expiration_date">
            <summary>
            만료일
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_type">
            <summary>
            고객 구분
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_family_name">
            <summary>
            고객 성
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_name">
            <summary>
            고객 이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_family_name_kana">
            <summary>
            고객 성(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_name_kana">
            <summary>
            고객 이름(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_dept">
            <summary>
            고객담당부서
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_representative_name">
            <summary>
            고객 담당자명
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_zip_code">
            <summary>
            고객 우편번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_address_1">
            <summary>
            고객 주소1
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_address_2">
            <summary>
            고객 주소2
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_address_3">
            <summary>
            고객 주소 3
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_tel_type">
            <summary>
            고객 전화번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.customer_tel">
            <summary>
            고객전화번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.item_date">
            <summary>
            청구일자 상세 (기본1 최대20)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.item_detail">
            <summary>
            청구내역 상세 (기본1 최대20)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_KONBINI_P.item_amount">
            <summary>
            청구금액 상세 (기본1 최대20)
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL">
            <summary>
            Paygent PayPal 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.amount">
            <summary>
            결제금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.return_url">
            <summary>
            접수완료알림 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.cancel_url">
            <summary>
            취소 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.banner_url">
            <summary>
            배너 URL
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.pc_mobile_type">
            <summary>
            PC-Mobile 구분
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.locale_code">
            <summary>
            언어코드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.sales_flg">
            <summary>
            동시판매플래그
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_PAYPAL.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT">
            <summary>
            Paygent 가상계좌 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.claim_amount">
            <summary>
            청구금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.billing_name">
            <summary>
            결제이름
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.billing_name_kana">
            <summary>
            결제이름 (카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.expire_days">
            <summary>
            지불기한일
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.numbering_type">
            <summary>
            넘버링구분
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.virtual_account_bank_code">
            <summary>
            가상계좌금융기관
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.virtual_account_branch_code">
            <summary>
            가상계좌지점
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.virtual_account_number">
            <summary>
            가상계좌번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_VIRTUAL_ACCOUNT.fix_numbering_reg">
            <summary>
            고정번호부여
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.TELEGRAM_KIND">
            <summary>
            결제종별
            <para>하나만 지정한경우 첫 화면이 링크형 메뉴화면이 아니라 지정한 결제종별 화면으로 이동합니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.TRADING_ID">
            <summary>
            판매자 거래 ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.MERCHANT_ID">
            <summary>
            판매자ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.merchant_name">
            <summary>
            판매자명
            <para>링크형 결제 화면에 표시되는 판매자 이름 입니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.fix_params">
            <summary>
            고정항목
            <para>구매자가 변경할 수 없는 또는 필수 입력 파라메터를 지정합니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.banner_url">
            <summary>
            배너URL
            <para>PayPal 결제화면에서 표시될 배너 이미지 주소 입니다. 단, 127byte를 넘으면 이미지 대신 사업자명이 표시됩니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.hc">
            <summary>
            해시코드 SHA256
            <para>해시사용 가맹점인경우 필수 입니다.</para>
            <para>가맹점거래ID+결제종별+고정항목+청구금액+판매자ID+지불기간(일지정)+지불기간(분지정)+지불구분+카드확인번호이용플래그+고객ID+3D보안불필요구분</para>
            <para>사용하지 않는 변수는 입력하지 않고 해시를 만듭니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.id">
            <summary>
            청구금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.payment_detail">
            <summary>
            결제내용
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.payment_detail_kana">
            <summary>
            결제내용(카타카나)
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.payment_term_day">
            <summary>
            지불기한(일지정)
            <para>링크화면만료 및 편의점, ATM, 가상계좌 이용시 지불기한이 이 값으로 지정됩니다.</para>
            <para>지정가능범위 2~60</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.payment_term_min">
            <summary>
            지불기한(분지정)
            <para>링크화면만료 및 편의점, ATM, 가상계좌 를 제외한 다른 결제 종별에서만 사용할 수 있습니다.</para>
            <para>지정가능범위 5~2880</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.free_memo">
            <summary>
            자유메모란
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.return_url">
            <summary>
            전환URL
            <para>링크화면에서 구매자가 지불을 완료 또는 지불용 번호를 인출한 후 "구입한 사이트로 돌아가기" 버튼을 눌렀을대 전환되는 URL입니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.stop_return_url">
            <summary>
            처리중지전환URL
            <para>"지불중단", "점포화면으로돌아기기" 버튼을 눌러, 결제를 중지하고 가맹점 화면으로 돌아가기 위한 URL</para>
            <para>URL이 지정되지 않으면 "지불중단", "점포화면으로돌아기기" 버튼은 생성되지 않습니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.copy_right">
            <summary>
            저작권표시
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.customer_family_name">
            <summary>
            고객이름 firstName
            <para>편의점 결재인경우 이 항목은 필수 입니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.customer_name">
            <summary>
            고객이름 lastName
            <para>편의점 결재인경우 이 항목은 필수 입니다.</para>
            <para>fix_params항목에 "customer_info"를 지정하면 입력이 필수입니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.customer_family_name_kana">
            <summary>
            고객이름 firstName - 카나
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.customer_name_kana">
            <summary>
            고객이름 lastName - 카나
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.isbtob">
            <summary>
            협력모드
            <para>1을 지정하면 링크화면이 아닌 전문은 반환합니다.</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.site_id">
            <summary>
            사이트ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequestLinkType.company_name">
            <summary>
            구매자법인명
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_REQUEST_LINK">
            <summary>
            Paygent 링크형 CARD 요청
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_REQUEST_LINK.payment_class">
            <summary>
            지불구분
            <para>0:1회, 1:모두, 2:보너스외전부</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_REQUEST_LINK.use_card_conf_number">
            <summary>
            카드 확인번호 이용
            <para>확인번호를입력해야 하는지 여부를 지정</para>
            <para>0:사용하지않음, 1:사용</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_REQUEST_LINK.stock_card_mode">
            <summary>
            카드정보보관기능
            <para>0:일반, 1:보관(선택), 2:보관(강제)</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_REQUEST_LINK.customer_id">
            <summary>
            고객ID
            <para>가맹점이 관리하는 고객의 식별자(Identity)</para>
            <para>카드정보보관모드 사용시 필수</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest_CARD_REQUEST_LINK.threedsecure_ryaku">
            <summary>
            3D보안필요여부
            <para>0:불필요,1:필요</para>
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest">
            <summary>
            Paygent 요청
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationInsert">
            <summary>
            Paygent전표통지DB저장서비스
            <para>Paygent 에서 송신하는 전표를 PaygentRequestCheck Table에 저장하는 서비스</para>
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationInsert.Do(JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem,System.DateTime)">
            <summary>
            저장
            </summary>
            <param name="item">Paygent 전표 통지</param>
            <returns>Paygent전표통지저장결과</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationInsert.Insert(JangBoGo.PaygentRequest.Model.PaygentRequestItem,JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem,JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationSaveResult,System.DateTime)">
            <summary>
            Paygent 전표 통지 저장
            </summary>
            <param name="paygentRequestItem">Paygent요청내역</param>
            <param name="item">Paygent 전표 통지</param>
            <returns>insert id</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationInsert.InsertInvalidData(JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem,JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationSaveResult,System.DateTime)">
            <summary>
            Paygent 전표 통지 저장
            </summary>
            <param name="paygentRequestItem">Paygent요청내역</param>
            <param name="item">Paygent 전표 통지</param>
            <returns>insert id</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationInsert.FindLatestItemByTradingId(JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem)">
            <summary>
            최근Paygent요청내역 조회
            </summary>
            <returns>Paygent요청내역</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationInsert.CheckInValidTradingId(JangBoGo.PaygentRequest.Model.PaygentRequestItem,JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem)">
            <summary>
            거래ID유효확인
            </summary>
            <param name="item">Paygent 전표 통지</param>
            <param name="result">Paygent전표통지저장결과</param>
            <returns>유효여부</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationInsert.CheckExists(JangBoGo.PaygentRequest.Model.PaygentRequestItem,JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem)">
            <summary>
            기저장여부확인
            </summary>
            <param name="paygentRequestId">Paygent요청id</param>
            <param name="paymentNoticeId">전표통지ID</param>
            <returns>유효여부</returns>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificationSaveResult">
            <summary>
            Paygent 전표통지 저장 결과
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificatioSaveResultStatus">
            <summary>
            Paygent전표통지저장결과상태
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificatioSaveResultStatus.Success">
            <summary>
            성공
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificatioSaveResultStatus.Exists">
            <summary>
            이미존재
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificatioSaveResultStatus.Fail">
            <summary>
            실패
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Paygent.Service.Module.PaygentTelegramNotificatioSaveResultStatus.InvalidTradingId">
            <summary>
            처리할 수 없는 TradingID
            </summary>
        </member>
        <member name="T:JangBoGo.Payment.Paygent.Service.PaygentTelegramNotificationSaveService">
            <summary>
            Paygent전표통지저장서비스
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.PaygentTelegramNotificationSaveService.Save(JangBoGo.Payment.Paygent.Model.PaygentTelegramNotificationItem)">
            <summary>
            저장
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.IPaygentService.ProcPaygentTelegramPaymentRequest(System.Int32,System.Int32,JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND,System.Collections.IDictionary)">
            <summary>
            Paygent 결제 전문요청
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="totalPrice">금액</param>
            <param name="paymentType">결제전문종별</param>
            <param name="parameter">매개변수</param>
            <returns>Paygent처리결과</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.IPaygentService.ProcPaygentTelegramRequestManual(JangBoGo.PaygentRequest.Model.PaygentRequestItem,JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND,System.Collections.IDictionary)">
            <summary>
            Paygent 전문요청
            </summary>
            <param name="paygentRequestItem">결제요청객체</param>
            <param name="paymentType">전문종별코드</param>
            <param name="parameter">파라메터Dic</param>
            <returns>Paygent처리결과</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.IPaygentService.ProcPaygentTelegramPaymentRequestFixSequenceWithNew(System.Int32)">
            <summary>
            Paygent 결제 재요청 (새요청)
            <para>기 전송분을 기준으로 새로운 전송내역을 생성하여 다시 전송합니다.</para>
            </summary>
            <param name="paygentRequestItemId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.IPaygentService.PgCancel(JangBoGo.Payment.Paygent.Model.PaygentPgCancelParameter)">
            <summary>
            PG취소
            </summary>
            <param name="paraameter">PaygentPgCancelParameter</param>
            <exception cref="T:Adprint.Exceptions.AdprintServiceException">ORDCAN0004,ORDCAN0005</exception>
            <returns>취소성공여부</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.PaygentService.ProcPaygentTelegramPaymentRequest(System.Int32,System.Int32,JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND,System.Collections.IDictionary)">
            <summary>
            Paygent 결제 전문요청
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="totalPrice">금액</param>
            <param name="paymentType">결제전문종별</param>
            <param name="parameter">매개변수</param>
            <returns>Paygent처리결과</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.PaygentService.FindPaygentCartInfo(System.Int32,System.Int32)">
            <summary>
            사용자카드정보조회
            </summary>
            <param name="userNum"></param>
            <param name="pgKey"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.PaygentService.ProcPaygentTelegramPaymentRequestFixSequence(System.Int32,JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND)">
            <summary>
            Paygent 결제 재요청
            기 전송분을 기준으로 다시 전송합니다.
            </summary>
            <param name="paygentRequestItemId">이전 결제요청객체ID</param>
            <param name="paymentType">전문종별</param>
            <returns>Paygent처리결과</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.PaygentService.ProcPaygentTelegramPaymentRequestFixSequence(System.Int32,JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND,System.Collections.IDictionary)">
            <summary>
            Paygent 결제 재요청
            기 전송분을 기준으로 다시 전송합니다.
            - 파라메터 매개변수가 추가 또는 변경 됩니다.
            </summary>
            <param name="paygentRequestItemId">이전 결제요청객체ID</param>
            <param name="paymentType">전문종별</param>
            <param name="parameter">추가 또는 변경 파라메터Dic</param>
            <returns>Paygent처리결과</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.PaygentService.ProcPaygentTelegramPaymentRequestFixSequenceWithNew(System.Int32)">
            <summary>
            Paygent 결제 재요청 (새요청)
            <para>기 전송분을 기준으로 새로운 전송내역을 생성하여 다시 전송합니다.</para>
            </summary>
            <param name="paygentRequestItemId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Service.PaygentService.ProcPaygentTelegramRequestManual(JangBoGo.PaygentRequest.Model.PaygentRequestItem,JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND,System.Collections.IDictionary)">
            <summary>
            Paygent 전문요청
            </summary>
            <param name="paygentRequestItem">결제요청객체</param>
            <param name="siteType">결제요청사이트타입</param>
            <param name="paymentType">전문종별코드</param>
            <param name="parameter">파라메터Dic</param>
            <returns>Paygent처리결과</returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.GetDicStrParam(System.Collections.IDictionary,System.String,System.String)">
            <summary>
            IDictionary 에서 null 또는 값을 꺼냄
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.GetDicStrParam(System.Collections.IDictionary,System.Collections.IDictionary,System.String,System.String)">
            <summary>
            IDictionary 에서 null 또는 값을 꺼냄
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.RequestDocToDic(System.Xml.Linq.XDocument,System.String)">
            <summary>
            Paygent Request XDocument 에서 값을 꺼냄
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.ConvertPaygentTelegramRequestToDictionary(JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest)">
            <summary>
            PaygentTelegramRequest 의 프로퍼티를 유효한 Dictionary값으로 변환합니다.
            </summary>
            <param name="ptr">PaygentTelegramRequest</param>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.AutoCheckAndFixTelegramRequest(JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest)">
            <summary>
            PaygentTelegramRequest의 프로퍼티값을 해당 속성의 전문 규칙에 맞게 체크하고 자동 수정한다.
            1. 문자열 타입에 맞게 변환 및 제거
            2. 문자열 최대 길이에 맞게 자름
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.TelegramParamFixByTelegramParamType(JangBoGo.Payment.Paygent.Model.PaygentAttributes.TelegramParamType,System.String)">
            <summary>
            전문요청 클래스의 값을 지정된 문자타입과 바이트길이로 변환 및 잘라냅니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.ToRequestDictionary(JangBoGo.Payment.Paygent.Model.PaygentTelegramRequest)">
            <summary>
            전문요청 객채의 전문용 Property를 IDictionary로 반환합니다.
            </summary>
            <param name="ptr"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.GetPaygentRequestTelegramDescription(System.String,JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND)">
            <summary>
            전문객체에서 입력한 Property의 속성중 Description의 값을 가져 옵니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.GetPropertyNameFromRESPONSE_HEADER_DETAIL(System.String)">
            <summary>
            RESPONSE_HEADER_DETAIL 에서 전문요청객체의 Property명을 추출합니다.
            </summary>
            <param name="RESPONSE_HEADER_DETAIL"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Payment.Paygent.Util.PaygentUtil.GetPaygent_CARD_KIND(System.String)">
            <summary>
            카드번호로 카드종류 찾기
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter.OrderId">
            <summary>
            주문번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter.JoinerId">
            <summary>
            이용사ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter.OrderCode">
            <summary>
            주문코드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter.AdyenSystemDefaultOption">
            <summary>
            Adyen시스템기본설정
            <para>account:법인계정</para>
            <para>password:법인패스워드</para>
            <para>endpoint:ApiUrl</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter.MerchantAccount">
            <summary>
            Adyen이용사계정
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter.OriginAmount">
            <summary>
            원금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter.RefundAmount">
            <summary>
            반환대상금액
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Adyen.Service.IAdyenService.PgCancel(JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter)">
            <summary>
            PG취소
            </summary>
            <param name="parameter">AdyenPgCancelParameter</param>
            <exception cref="T:System.Web.HttpException"></exception>
            <returns>성공여부</returns>
        </member>
        <member name="M:JangBoGo.Payment.Adyen.Service.IAdyenService.PgCancelPartial(JangBoGo.Payment.Adyen.Model.AdyenPgCancelParameter)">
            <summary>
            PG부분취소
            <para>부분취소 시, AdyenPgCancelParameter 에 Capture용 원금과 반환금액을 입력해야 합니다.</para>
            </summary>
            <param name="parameter">AdyenPgCancelParameter</param>
            <exception cref="T:System.Web.HttpException"></exception>
            <returns>성공여부</returns>
        </member>
        <member name="P:JangBoGo.Payment.INICIS.Model.InicisPgCancelParameter.OrderId">
            <summary>
            주문번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.INICIS.Model.InicisPgCancelParameter.JoinerId">
            <summary>
            이용사ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.INICIS.Model.InicisPgCancelParameter.InicisSystemOption">
            <summary>
            Inicis시스템설정
            <para>mid:법인계정</para>
            <para>password:법인패스워드</para>
            <para>signKey:발급키</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.INICIS.Model.InicisPgCancelParameter.OriginAmount">
            <summary>
            원금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.INICIS.Model.InicisPgCancelParameter.RefundAmount">
            <summary>
            반환대상금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paypal.Model.PaypalPgCancelParameter.OrderId">
            <summary>
            주문번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paypal.Model.PaypalPgCancelParameter.JoinerId">
            <summary>
            이용사ID
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paypal.Model.PaypalPgCancelParameter.OrderCode">
            <summary>
            주문코드
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paypal.Model.PaypalPgCancelParameter.PaypalSystemOption">
            <summary>
            Paypal시스템기본설정
            <para>BusinessAccount : 계정</para>
            <para>UserName : key</para>
            <para>Password : key-password</para>
            <para>Uri : 접속주소</para>
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paypal.Model.PaypalPgCancelParameter.OriginAmount">
            <summary>
            원금액
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Paypal.Model.PaypalPgCancelParameter.RefundAmount">
            <summary>
            반환대상금액
            </summary>
        </member>
        <member name="M:JangBoGo.Payment.Paypal.Module.PaypalCancelClient.Post">
            <summary>
            PAYPAL은 요청 결과를 JSON으로 리턴 하기 때문에 NameValueCollection 대신 JObject를 사용
            </summary>
            <returns></returns>
        </member>
        <member name="P:JangBoGo.Payment.Zeus.Model.ZeusPgCancelParameter.OrderId">
            <summary>
            주문번호
            </summary>
        </member>
        <member name="P:JangBoGo.Payment.Zeus.Model.ZeusPgCancelParameter.SiteCode">
            <summary>
            사이트코드
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Zeus.Model.ZeusCGIInfo.ZEUS_URL_HOST">
            <summary>
            https://linkpt.cardservice.co.jp
            </summary>
        </member>
        <member name="F:JangBoGo.Payment.Zeus.Model.ZeusCGIInfo.AXES_URL_HOST">
            <summary>
            https://gw.axes-payment.com
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Subject">
            <summary>
            제목
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Body">
            <summary>
            본문
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Sender">
            <summary>
            발신 Email
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Sender_Name">
            <summary>
            발신자 이름
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.UserName">
            <summary>
            DirectSend ID
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Recipients">
            <summary>
            받는 이의 E-mail ','으로 구분
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Key">
            <summary>
            [Api 연동 관리] 발급 받은 API Key
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Type">
            <summary>
            asp
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Mail_type">
            <summary>
            즉시발송 / 예약 발송 구분
            NORMAL - 즉시발송 / ONETIME - 1회예약 / WEEKLY - 매주정기예약 / MONTHLY - 매월정기예약 / YEARLY - 매년정기예약
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Bodytag">
            <summary>
            메일 내용을 텍스트로 보낼때 1(기본값은 HTML이고 따로 설정 안해도 됨)
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Return_url">
            <summary>
            결과 값을 받을 도메인
            실제 발송성공실패 여부를 받기 원하실 경우 주석을 해제하신 후 결과를 받을 URL을 입력해 주시기 바랍니다.
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Open">
            <summary>
            발송 측정결과 Open 값을 받을 경우 1
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Click">
            <summary>
            발송 측정결과 Click 값을 받을 경우 1
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Check_period">
            <summary>
            트래킹 기간을 설정 3,7,15,30일 기준)
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Option_return_url">
            <summary>
            위의 측정 결과를 받고 싶은 URL입력
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Start_reserve_time">
            <summary>
            예약시작시간
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.End_reserve_time">
            <summary>
            예약종료시간
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Remained_count">
            <summary>
            예약 기간동안 발송 횟수를 넣어준다.
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Agreement_text">
            <summary>
            수신동의 문구를 넣어준다.
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Deny_text">
            <summary>
            수신거부 문구를 넣어준다.
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Sender_info_text">
            <summary>
            발신자 정보 문구를 넣어준다.
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Logo_state">
            <summary>
            Logo를 사용할 때 1/ 사용하지 않을 때 0
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.Logo_path">
            <summary>
            로고 이미지 경로(Logo_state 1일 때 path가 없으면 DirectSend에서 등록된 이미지 사용
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.File_url">
            <summary>
            첨부파일의 URL을 보내면 DirectSend에서 파일을 download 받아 발송처리를 진행함. 개당 10M이하, 파일 구분자는 '|(shift+\)'로 사용 5개까지 첨부 가능
            </summary>
        </member>
        <member name="P:JangBoGo.Service.Email.Model.DirectSendMailModel.File_name">
            <summary>
            첨부파일 이름 지정. 첨부파일은 순차적, 지정하지 않을 경우 마지막 파일 이름으로 메일 보여짐
            </summary>
        </member>
        <member name="M:JangBoGo.Service.Mailing.MailingService.InsertItemAndTarget(JangBoGo.Mailing.Model.MailingItem,System.String,System.String,System.Int32)">
            <summary>
            Partner > 프로모션 > 일반메일 관리 > 일반메일 발송 [메일발송]
            </summary>
            <param name="item"></param>
            <param name="siteUrl"></param>
            <param name="joinerId"></param>
        </member>
        <member name="M:JangBoGo.Service.Mailing.MailingService.GetListBySearchParam(JangBoGo.Info.Mailing.Model.MailingSearchParam,System.Int32,System.String,JangBoGo.Model.Param.Common.PagingParam)">
            <summary>
            발송내역 검색(발송내역 보기)
            </summary>
            <param name="param"></param>
            <param name="joinerId"></param>
            <param name="paging"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Service.Mailing.MailingService.GetMailingTargetByType(System.Int32,System.Int32,System.String,System.String,JangBoGo.Model.Param.Common.PagingParam)">
            <summary>
            발송내역 검색(메일 통계 보기)
            </summary>
            <param name="joinerId"></param>
            <param name="mailingId"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Service.Mailing.MailingService.GetAutoMailSendList(JangBoGo.Info.Mailing.Model.AutoMailSearchParam,JangBoGo.Model.Param.Common.PagingParam)">
            <summary>
            파트너 > 고객 > 자동메일 관리 > 자동메일 발송내역 조회 (Email->Mailing 통합 후 수정 필요)
            </summary>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="T:JangBoGo.Service.QaBoard.Module.NotificationModule">
            <summary>
            게시물관련된 알림을 책임집니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Service.QaBoard.Module.QaBoardModule">
            <summary>
            게시물을 책임집니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Service.QaBoard.Module.BoardReadModule">
            <summary>
            개시물을 읽었는지 책임집니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Service.QaBoard.QaBoardService.View(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="id">게시물 번호</param>
            <param name="viewJoinerId">보려는 조이너 아이디</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Service.DBObject.Builder.AbstractDBObjectBuilder.GetSysDepends">
            <summary>
            해당 객체가 종속(참조)하는 객체
            </summary>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Service.DBObject.Builder.AbstractDBObjectBuilder.GetSysDependency">
            <summary>
            해당 객체를 종속(참조)하는 객체
            </summary>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Service.QaStoredFile.IQaStoredFileService.Upload(System.Web.HttpPostedFileBase,System.String,System.String,System.Int32)">
            <summary>
            파일 업로드
            </summary>
            <param name="file">파일</param>
            <param name="type">파일형태(ex, xxxBoard)</param>
            <param name="saveVirtureDirectory">저장위치(가상경로)</param>
            <param name="joinerId">이용사ID</param>
        </member>
        <member name="T:JangBoGo.Service.QaStoredFile.QaStoredFileService">
            <summary>
            게시물과 관련된 파일처리를 책임 집니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Service.TqoonWebRedirect.ITqoonWebRedirectService.GetConvertUrl(System.Int32,System.String)">
            <summary>
            V1의 주소로 접근 시, V2의 주소로 전환하기 위한 테이블을 조회합니다.
            </summary>
            <param name="joinerId">이용사 Id</param>
            <param name="originUrl">기존 Url</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Service.TqoonWebRedirect.ITqoonWebRedirectService.GetList(System.Int32,JangBoGo.Model.Param.Common.PagingParam)">
            <summary>
            관리자 페이지에서 사용하는 주소 전환 목록을 조회합니다.
            </summary>
            <param name="joinerId">이용사 Id</param>
            <param name="pagingParam">페이징 객체</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Service.TqoonWebRedirect.ITqoonWebRedirectService.InsertItem(JangBoGo.Info.TqoonWebRedirect.Model.TqoonWebRedirectItem)">
            <summary>
            새 RedirectItem을 생성합니다.
            </summary>
            <param name="item">RedirectItem</param>
        </member>
        <member name="M:JangBoGo.Service.TqoonWebRedirect.ITqoonWebRedirectService.UpdateItem(JangBoGo.Info.TqoonWebRedirect.Model.TqoonWebRedirectItem)">
            <summary>
            RedirectItem을 수정 합니다.
            </summary>
            <param name="item">RedirectItem</param>
        </member>
        <member name="M:JangBoGo.Service.TqoonWebRedirect.ITqoonWebRedirectService.DeleteItem(System.Int32)">
            <summary>
            RedirectItem을 삭제 합니다.
            </summary>
            <param name="id">id</param>
        </member>
        <member name="M:JangBoGo.Service.WorkerLog.WorkerLogApiCaller.InsertLog(System.String,System.String)">
            <summary>
            hq.tqoon.com에 작업 로그 저장
            </summary>
            <param name="name">워커 이름</param>
            <param name="classification"> 기본 작동 서버 ip </param>
        </member>
        <member name="M:JangBoGo.Service.WorkerLog.WorkerLogApiCaller.InsertLog(System.String)">
            <summary>
            hq.tqoon.com에 작업 로그 저장
            classification은 동작 컴퓨터의 ip
            </summary>
            <param name="name">워커 이름</param>
        </member>
        <member name="P:JangBoGo.ExchangeRate.Model.ExchangeRateDbItem.StandardRate">
            <summary>
            송금 받을 때 환율
            </summary>
        </member>
        <member name="P:JangBoGo.ExchangeRate.Model.ExchangeRateDbItem.BasicRate">
            <summary>
            매매기준율
            </summary>
        </member>
        <!-- "P:JangBoGo.MailingTarget.Model.MailingTargetItem.Name1" 멤버에 대해 잘못된 형식의 XML 주석은 무시됩니다. -->
        <member name="M:JangBoGo.PaygentRequest.Dao.IPaygentRequestDao.CreateTradingId(System.Int32,System.Int32,System.String)">
            <summary>
            전문결제요청 관리 데이터 생성
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="totalPrice">청구금액</param>
            <param name="stdSite">사이트ID (2글자: Adprint-AD, Makumaku-MK)</param>
        </member>
        <member name="M:JangBoGo.PaygentRequest.Dao.IPaygentRequestDao.RetrieveLatestItemByTradingId(System.String)">
            <summary>
            주문결제 요청 내역 조회
            </summary>
            <param name="trading_id">Paygent에 전달한 고유 결제ID</param>
        </member>
        <member name="M:JangBoGo.PaygentRequest.Dao.IPaygentRequestDao.RetrieveLatestItemByOrderId(System.Int32,System.String,System.Nullable{JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND})">
            <summary>
            주문결제 요청 내역 조회
            해당 주문번호의 최근 결제 요청내역을 조회합니다.
            Paygent에 전달한 고유 결제ID를 모를때 사용합니다.
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="stdSite">사이트ID</param>
            <param name="telegramKind">결제종별(옵셔널)</param>
        </member>
        <member name="M:JangBoGo.PaygentRequest.Dao.IPaygentRequestDao.RetrievePaymentRequestLatestItemByOrderId(System.Int32,System.String,System.String)">
            <summary>
            주문결제 결제요청 내역 조회
            해당 주문번호의 최근 결제요청에 관한 요청내역을 조회합니다.
            Paygnet에 전달한 고유 결제ID를 모를때 사용합니다.
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="stdSite">사이트ID - 사이트코드와 함께 stdSite IN 조건으로 검색합니다.</param>
            <param name="siteCode">사이트코드 - 사이트ID와 함께 stdSite IN 조건으로 검색합니다.</param>
        </member>
        <member name="M:JangBoGo.PaygentRequest.Dao.PaygentRequestDao.CreateTradingId(System.Int32,System.Int32,System.String)">
            <summary>
            전문결제요청 관리 데이터 생성
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="stdSite">사이트ID (2글자: Adprint-AD, Makumaku-MK)</param>
        </member>
        <member name="M:JangBoGo.PaygentRequest.Dao.PaygentRequestDao.RetrieveLatestItemByTradingId(System.String)">
            <summary>
            주문결제 요청 내역 조회
            </summary>
            <param name="trading_id">Paygent에 전달한 고유 결제ID</param>
        </member>
        <member name="M:JangBoGo.PaygentRequest.Dao.PaygentRequestDao.RetrieveLatestItemByOrderId(System.Int32,System.String,System.Nullable{JangBoGo.Payment.Paygent.Model.Paygent_TELEGRAM_KIND})">
            <summary>
            주문결제 요청 내역 조회
            해당 주문번호의 최근 요청내역을 조회합니다.
            Paygent에 전달한 고유 결제ID를 모를때 사용합니다.
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="stdSite">사이트ID</param>
            <param name="telegramKind">결제종별(옵셔널)</param>
        </member>
        <member name="M:JangBoGo.PaygentRequest.Dao.PaygentRequestDao.RetrievePaymentRequestLatestItemByOrderId(System.Int32,System.String,System.String)">
            <summary>
            주문결제 결제요청 내역 조회
            해당 주문번호의 최근 결제요청에 관한 요청내역을 조회합니다.
            Paygnet에 전달한 고유 결제ID를 모를때 사용합니다.
            </summary>
            <param name="intOrderNum">주문번호</param>
            <param name="stdSite">사이트ID - 사이트코드와 함께 stdSite IN 조건으로 검색합니다.</param>
            <param name="siteCode">사이트코드 - 사이트ID와 함께 stdSite IN 조건으로 검색합니다.</param>
        </member>
        <member name="M:JangBoGo.PaygentRequestPaymentCheck.Dao.IPaygentRequestPaymentCheckDao.RetrieveCheckTargetByJoinerDbConnection(System.String)">
            <summary>
            결제내역차등조회내역중 미체크 내역을 조회합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.PaygentRequestPaymentCheck.Dao.IPaygentRequestPaymentCheckDao.UpdateCheckedYn(System.Int32,System.String)">
            <summary>
            결제내역차등조회내역의 워커 처리 완료상태 업데이트
            </summary>
            <param name="id">id</param>
            <param name="yn">Y or N</param>
        </member>
        <member name="M:JangBoGo.PaygentRequestPaymentCheck.Dao.PaygentRequestPaymentCheckDao.RetrieveCheckTargetByJoinerDbConnection(System.String)">
            <summary>
            결제내역차등조회내역중 미체크 내역을 조회합니다.
            </summary>
            <param name="dbConnection">대상 DB ADPRINT, JANGBOGO, other...</param>
        </member>
        <member name="M:JangBoGo.PaygentRequestPaymentCheck.Dao.PaygentRequestPaymentCheckDao.UpdateCheckedYn(System.Int32,System.String)">
            <summary>
            결제내역차등조회내역의 워커 처리 완료상태 업데이트
            </summary>
            <param name="id">id</param>
            <param name="yn">Y or N</param>
        </member>
        <member name="F:JangBoGo.Localization.SmallDateTime.MinValue">
            <summary>
            1900-01-01
            </summary>
        </member>
        <member name="F:JangBoGo.Localization.SmallDateTime.MaxValue">
            <summary>
            2079-06-06
            </summary>
        </member>
        <member name="T:JangBoGo.Logger.TqLogger">
            <summary>
            TqoonLog Database를 이용한 로깅 시스템
            </summary>
        </member>
        <member name="F:JangBoGo.Logger.TqLogger.LogManagerName">
            <summary>
            기본로거명
            <para>TqLogger를 이용하기 위해서는, 이 이름으로 log4net.xml 에 로거설정이 되어 있어야 한다.</para>
            </summary>
        </member>
        <member name="F:JangBoGo.Logger.TqLogger.DefaultAdoNetAppenderName">
            <summary>
            기본 DatabaseAppender 명
            <para>이 이름으로 log4net.xml 에 Appender 설정이 되어 있어야 한다.</para>
            </summary>
        </member>
        <member name="F:JangBoGo.Logger.TqLogger.Logger">
            <summary>
            LogManager
            <para>Indexer 를 이용하여 logger 를 자동으로 생성 또는 반환한다</para>
            </summary>
        </member>
        <member name="F:JangBoGo.Logger.TqLogger.BizLog">
            <summary>
            업무로그 - TqoonLibraries 내에서 사용하는 기본 로거
            <para>logger 의 이름은 DefaultLoggerName인 TqoonBizLog 이다.</para>
            </summary>
        </member>
        <member name="F:JangBoGo.Logger.TqLogger.ErrorLog400">
            <summary>
            웹400에러로그 - 400 대 오류 용
            <para>logger 의 이름은 DefaultLoggerName인 Tqoon400Log 이다.</para>
            </summary>
        </member>
        <member name="F:JangBoGo.Logger.TqLogger.ErrorLog500">
            <summary>
            웹500에러로그 - 500 대 오류 용 (또는 400대를 제외한)
            <para>logger 의 이름은 DefaultLoggerName인 Tqoon500Log 이다.</para>
            </summary>
        </member>
        <member name="T:JangBoGo.Logger.TqLogHandlerManager">
            <summary>
            TqLogHandler 반환을 위한 관리객체
            </summary>
        </member>
        <member name="P:JangBoGo.Logger.TqLogHandlerManager.Item(System.String)">
            <summary>
            TqoonBizLog 시스템에 기반한 필요한 로거를 생성 및 반환합니다.
            </summary>
            <param name="loggerName">TqoonBizLog 시스템에 기반한 필요한 로거 명</param>
            <returns></returns>
        </member>
        <member name="T:JangBoGo.Logger.TqLogHandler">
            <summary>
            ILog 핸들러
            </summary>
        </member>
        <member name="M:JangBoGo.Owin.Security.Facebook.FacebookAuthenticationMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Owin.IAppBuilder,Microsoft.Owin.Security.Facebook.FacebookAuthenticationOptions)">
            <summary>
            Initializes a <see cref="T:Microsoft.Owin.Security.Facebook.FacebookAuthenticationMiddleware" />
            </summary>
            <param name="next">The next middleware in the OWIN pipeline to invoke</param>
            <param name="app">The OWIN application</param>
            <param name="options">Configuration options for the middleware</param>
        </member>
        <member name="M:JangBoGo.Owin.Security.Facebook.FacebookAuthenticationMiddleware.CreateHandler">
            <summary>
            Provides the <see cref="T:Microsoft.Owin.Security.Infrastructure.AuthenticationHandler" /> object for processing authentication-related requests.
            </summary>
            <returns>An <see cref="T:Microsoft.Owin.Security.Infrastructure.AuthenticationHandler" /> configured with the <see cref="T:Microsoft.Owin.Security.Facebook.FacebookAuthenticationOptions" /> supplied to the constructor.</returns>
        </member>
        <member name="P:JangBoGo.SeoTitle.Model.SeoTitleDbItem.UrlPath">
            <summary>
            Url의 Path 부분
            </summary>
        </member>
        <member name="P:JangBoGo.SeoTitle.Model.SeoTitleDbItem.UrlQuery">
            <summary>
            Url의 Query 부분
            </summary>
        </member>
        <member name="T:JangBoGo.StoredFile.Dao.StoredFileDao">
            <summary>
            파일저장소 테이블을 관리하는 DAO
            <para></para>
            주의!, 이 DAO는 JangBoGo에 포함되어 있지만, AdprintNewDb 또는 OrderMall 을 사용해야 합니다.
            이 주의 메시지는 namespace가 변경되기 전까지 유효 합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.ZeusBankResult.Model.ZeusBankResultItem.ConvertToQueryString">
            <summary>
            QueryString 으로 변환
            </summary>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.ZeusBankResult.Query.ZeusBankResultQuery.UpdateCheckedYn(System.Int32,System.String)">
            <summary>
            처리여부 업데이트
            </summary>
            <param name="id">ID</param>
            <param name="checkedYn">처리여부 (Y:완료, N:미완료, X:처리실패)</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.ZeusCombiniResult.Model.ZeusCombiniResultItem.ConvertToQueryString">
            <summary>
            QueryString 으로 변환
            </summary>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.ZeusCombiniResult.Query.ZeusCombiniResultQuery.UpdateCheckedYn(System.Int32,System.String)">
            <summary>
            처리여부 업데이트
            </summary>
            <param name="id">ID</param>
            <param name="checkedYn">처리여부 (Y:완료, N:미완료, X:처리실패)</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.ZeusCreditResult.Model.ZeusCreditResultItem.ConvertToQueryString">
            <summary>
            QueryString 으로 변환
            </summary>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.ZeusCreditResult.Query.ZeusCreditResultQuery.UpdateCheckedYn(System.Int32,System.String)">
            <summary>
            처리여부 업데이트
            </summary>
            <param name="id">ID</param>
            <param name="checkedYn">처리여부 (Y:완료, N:미완료, X:처리실패)</param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Security.Cryptography.RSAEncrypt(System.String)">
            <summary>
            RSA 암호화 (Hex Type)
            </summary>
            <param name="sValue">암호화 대상 값</param>
        </member>
        <member name="M:JangBoGo.Security.Cryptography.BASE64Encrypt(System.String)">
            <summary>
            BASE64 암호화
            </summary>
            <param name="sValue">암호화 대상 값</param>
        </member>
        <member name="M:JangBoGo.Security.Cryptography.RSADecrypt(System.String)">
            <summary>
            RSA 복호화 (HEX Type)
            </summary>
            <param name="sValue">암호화 된 값</param>
        </member>
        <member name="M:JangBoGo.Security.Cryptography.BASE64Decrypt(System.String)">
            <summary>
            BASE64 복호화
            </summary>
            <param name="sValue">암호화 된 값</param>
        </member>
        <member name="M:JangBoGo.Security.Cryptography.SHA256Encrypt(System.String)">
            <summary>
            SHA256 암호화
            </summary>
            <param name="sValue"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Security.Cryptography.MD5Encrypt(System.String)">
            <summary>
            MD5 암호화
            </summary>
            <param name="sValue"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.Utils.ExcelMath.ROUNDUP(System.Double)">
            <summary>
            0에서 멀어지도록 수를 올림 합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.ExcelMath.ROUNDUP(System.Double,System.Int32)">
            <summary>
            0에서 멀어지도록 수를 올림 합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.ExcelMath.ROUNDUP(System.Double,System.Int32,System.Boolean)">
            <summary>
            0에서 멀어지도록 수를 올림 합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.ExcelMath.ROUND(System.Double)">
            <summary>
            수를 지정한 자릿수로 반올림 합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.ExcelMath.ROUND(System.Double,System.Int32)">
            <summary>
            수를 지정한 자릿수로 반올림 합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.ExcelMath.ROUNDDOWN(System.Double)">
            <summary>
            0에서 멀어지도록 수를 내림 합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.ExcelMath.ROUNDDOWN(System.Double,System.Int32)">
            <summary>
            0에서 멀어지도록 수를 내림 합니다.
            </summary>
        </member>
        <member name="T:JangBoGo.Utils.IO.FileData">
            <summary>
            Contains information about a file returned by the
            <see cref="T:JangBoGo.Utils.IO.FastDirectoryEnumerator"/> class.
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.IO.FileData.Attributes">
            <summary>
            Attributes of the file.
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.IO.FileData.CreationTimeUtc">
            <summary>
            File creation time in UTC
            </summary>
        </member>
        <member name="P:JangBoGo.Utils.IO.FileData.LastAccesTime">
            <summary>
            Gets the last access time in local time.
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.IO.FileData.LastAccessTimeUtc">
            <summary>
            File last access time in UTC
            </summary>
        </member>
        <member name="P:JangBoGo.Utils.IO.FileData.LastWriteTime">
            <summary>
            Gets the last access time in local time.
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.IO.FileData.LastWriteTimeUtc">
            <summary>
            File last write time in UTC
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.IO.FileData.Size">
            <summary>
            Size of the file in bytes
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.IO.FileData.Name">
            <summary>
            Name of the file
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.IO.FileData.Path">
            <summary>
            Full path to the file.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.IO.FileData.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:JangBoGo.Utils.IO.FileData.#ctor(System.String,JangBoGo.Utils.IO.WIN32_FIND_DATA)">
            <summary>
            Initializes a new instance of the <see cref="T:JangBoGo.Utils.IO.FileData"/> class.
            </summary>
            <param name="dir">The directory that the file is stored at</param>
            <param name="findData">WIN32_FIND_DATA structure that this
            object wraps.</param>
        </member>
        <member name="T:JangBoGo.Utils.IO.WIN32_FIND_DATA">
            <summary>
            Contains information about the file that is found
            by the FindFirstFile or FindNextFile functions.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.IO.WIN32_FIND_DATA.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="T:JangBoGo.Utils.IO.FastDirectoryEnumerator">
            <summary>
            A fast enumerator of files in a directory.  Use this if you need to get attributes for
            all files in a directory.
            </summary>
            <remarks>
            This enumerator is substantially faster than using <see cref="M:System.IO.Directory.GetFiles(System.String)"/>
            and then creating a new FileInfo object for each path.  Use this version when you
            will need to look at the attibutes of each file returned (for example, you need
            to check each file in a directory to see if it was modified after a specific date).
            </remarks>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.EnumerateFiles(System.String)">
            <summary>
            Gets <see cref="T:JangBoGo.Utils.IO.FileData"/> for all the files in a directory.
            </summary>
            <param name="path">The path to search.</param>
            <returns>An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1"/> and
            allows you to enumerate the files in the given directory.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="path"/> is a null reference (Nothing in VB)
            </exception>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.EnumerateFiles(System.String,System.String)">
            <summary>
            Gets <see cref="T:JangBoGo.Utils.IO.FileData"/> for all the files in a directory that match a
            specific filter.
            </summary>
            <param name="path">The path to search.</param>
            <param name="searchPattern">The search string to match against files in the path.</param>
            <returns>An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1"/> and
            allows you to enumerate the files in the given directory.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="path"/> is a null reference (Nothing in VB)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="searchPattern"/> is a null reference (Nothing in VB)
            </exception>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.EnumerateFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets <see cref="T:JangBoGo.Utils.IO.FileData"/> for all the files in a directory that
            match a specific filter, optionally including all sub directories.
            </summary>
            <param name="path">The path to search.</param>
            <param name="searchPattern">The search string to match against files in the path.</param>
            <param name="searchOption">
            One of the SearchOption values that specifies whether the search
            operation should include all subdirectories or only the current directory.
            </param>
            <returns>An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1"/> and
            allows you to enumerate the files in the given directory.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="path"/> is a null reference (Nothing in VB)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="searchPattern"/> is a null reference (Nothing in VB)
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="searchOption"/> is not one of the valid values of the
            <see cref="T:System.IO.SearchOption"/> enumeration.
            </exception>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Gets <see cref="T:JangBoGo.Utils.IO.FileData"/> for all the files in a directory that match a
            specific filter.
            </summary>
            <param name="path">The path to search.</param>
            <param name="searchPattern">The search string to match against files in the path.</param>
            <returns>An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1"/> and
            allows you to enumerate the files in the given directory.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="path"/> is a null reference (Nothing in VB)
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="searchPattern"/> is a null reference (Nothing in VB)
            </exception>
        </member>
        <member name="T:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerable">
            <summary>
            Provides the implementation of the
            <see cref="T:System.Collections.Generic.IEnumerable`1"/> interface
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerable.#ctor(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Initializes a new instance of the <see cref="T:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerable"/> class.
            </summary>
            <param name="path">The path to search.</param>
            <param name="filter">The search string to match against files in the path.</param>
            <param name="searchOption">
            One of the SearchOption values that specifies whether the search
            operation should include all subdirectories or only the current directory.
            </param>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerable.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can
            be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerable.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be
            used to iterate through the collection.
            </returns>
        </member>
        <member name="T:JangBoGo.Utils.IO.FastDirectoryEnumerator.SafeFindHandle">
            <summary>
            Wraps a FindFirstFile handle.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.SafeFindHandle.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:JangBoGo.Utils.IO.FastDirectoryEnumerator.SafeFindHandle"/> class.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.SafeFindHandle.ReleaseHandle">
            <summary>
            When overridden in a derived class, executes the code required to free the handle.
            </summary>
            <returns>
            true if the handle is released successfully; otherwise, in the
            event of a catastrophic failure, false. In this case, it
            generates a releaseHandleFailed MDA Managed Debugging Assistant.
            </returns>
        </member>
        <member name="T:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator">
            <summary>
            Provides the implementation of the
            <see cref="T:System.Collections.Generic.IEnumerator`1"/> interface
            </summary>
        </member>
        <member name="T:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator.SearchContext">
            <summary>
            Hold context information about where we current are in the directory search.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator.#ctor(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Initializes a new instance of the <see cref="T:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator"/> class.
            </summary>
            <param name="path">The path to search.</param>
            <param name="filter">The search string to match against files in the path.</param>
            <param name="searchOption">
            One of the SearchOption values that specifies whether the search
            operation should include all subdirectories or only the current directory.
            </param>
        </member>
        <member name="P:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator.Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing,
            or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the element in the collection at the current position of the enumerator.
            </summary>
            <value></value>
            <returns>
            The element in the collection at the current position of the enumerator.
            </returns>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            true if the enumerator was successfully advanced to the next element;
            false if the enumerator has passed the end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:JangBoGo.Utils.IO.FastDirectoryEnumerator.FileEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The collection was modified after the enumerator was created.
            </exception>
        </member>
        <member name="M:JangBoGo.Utils.JsonUtil.Serialize``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>
            Json 객채로 변환
            </summary>
            <typeparam name="T">타입</typeparam>
            <param name="obj">대상</param>
            <param name="property">속성</param>
            <returns>JsonString</returns>
        </member>
        <member name="M:JangBoGo.Utils.JsonUtil.GetJsonResult(System.Nullable{JangBoGo.Enums.JsonUtilResultType},JangBoGo.Utils.JsonUtil.JsonStrManager[])">
            <summary>
            GetJsonResult
            </summary>
            <param name="isSuccess">result 성공여부 true:success, false:fail</param>
            <param name="param">string[2] 0:key, 1:value</param>
        </member>
        <member name="M:JangBoGo.Utils.JsonUtil.GetHtmlDataAttr(System.Object)">
            <summary>
            객체를 html의 data-{0} 속성 문자열 변환
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.Autowire(System.Object,System.String)">
            <summary>
            자동주입
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.Autowire(Spring.Context.Support.AbstractApplicationContext,System.Object)">
            <summary>
            자동주입
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.CreateObjectDefinition(Spring.Context.Support.AbstractApplicationContext,System.Reflection.PropertyInfo,System.Collections.Generic.IList{JangBoGo.Info.Object.ObjectHelper.AdoTemplateSpreadAttribute})">
            <summary>
            프로퍼티의 ObjectDefinition을 생성하고 그 이름을 리턴합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.GetObjectDefinition(Spring.Context.Support.AbstractApplicationContext,System.Reflection.PropertyInfo,System.Collections.Generic.IList{JangBoGo.Info.Object.ObjectHelper.AdoTemplateSpreadAttribute})">
            <summary>
            프로퍼티와 관련된 ObjectDefinition을 가져옵니다.
            <para>클래스명으로 기 등록되어 있는경우 이 설정값으로 병합 합니다.</para>
            <para>등록되어 있지 않는경우 기본생성 및 등록후 가져옵니다.</para>
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.IsDaoProperty(System.Reflection.PropertyInfo)">
            <summary>
            AdoDaoSupport 를 상속받는 Object인지 판단
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.GetDependencyInjectionType(System.Reflection.PropertyInfo)">
            <summary>
            주입되어야 하는 실제 타입을 가져 옵니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.GetAutowireTargetProperties(System.Type)">
            <summary>
            자동주입대상 프로퍼티를 가져옵니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.GetBasicContextName(System.Reflection.PropertyInfo)">
            <summary>
            기본설정 컨텍스트명을 가져옵니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.GetAutowireContextName(System.Reflection.PropertyInfo,Spring.Context.Support.AbstractApplicationContext,System.Collections.Generic.IList{JangBoGo.Info.Object.ObjectHelper.AdoTemplateSpreadAttribute})">
            <summary>
            Spring Context에 등록할 인스턴스명을 가져옵니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Utils.SpringAutowire.GetAdoTemplateName(System.Reflection.PropertyInfo,System.Collections.Generic.IList{JangBoGo.Info.Object.ObjectHelper.AdoTemplateSpreadAttribute})">
            <summary>
            AdoTemplate명을 가져옵니다.
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.WinApi.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.WinApi.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="F:JangBoGo.Utils.YusurunIP.CompanyIPs">
            <summary>
            회사IP
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeLang.JP">
            <summary>
            외국어 - 고객표시용
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeLang.KR">
            <summary>
            모국어
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeLang.CODE">
            <summary>
            코드
            </summary>
        </member>
        <member name="M:JangBoGo.CommonCode.CommonCode.StartUpCommonCodeByAdprint">
            <summary>
            공통코드 기능 초기화
            </summary>
        </member>
        <member name="M:JangBoGo.CommonCode.CommonCode.StartUpCommonCodeByTqoon(System.Int32)">
            <summary>
            공통코드 기능 초기화 - 티쿤용
            </summary>
        </member>
        <member name="M:JangBoGo.CommonCode.CommonCode.StartUpCommonCodeByTqoonAdmin">
            <summary>
            공통코드 기능 초기화 - 티쿤관리자용
            </summary>
        </member>
        <member name="M:JangBoGo.CommonCode.CommonCode.StartUpCommonCodeByTqoonOpenMarket(System.Int32)">
            <summary>
            공통코드 기능 초기화 - 오픈마켓용
            </summary>
        </member>
        <member name="M:JangBoGo.CommonCode.CommonCode.StartUpCommonCodeByMakuMaku">
            <summary>
            공통코드 기능 초기화 - 마쿠마쿠용
            </summary>
        </member>
        <member name="M:JangBoGo.CommonCode.CommonCode.DataLoad">
            <summary>
            공통코드 갱신
            </summary>
        </member>
        <member name="P:JangBoGo.CommonCode.CodeMemberRepository.Item(JangBoGo.CommonCode.CommonCodeGroupType,System.String)">
            <summary>
            코드명 검색 - Adprint 전용
            </summary>
            <param name="type">코드타입</param>
            <param name="code">코드</param>
            <returns>코드명 - 일어</returns>
        </member>
        <member name="P:JangBoGo.CommonCode.CodeMemberRepository.Item(JangBoGo.CommonCode.CommonCodeGroupType,System.String,JangBoGo.CommonCode.CommonCodeLang)">
            <summary>
            코드명 검색 - Adprint 전용
            </summary>
            <param name="type">코드타입</param>
            <param name="code">코드</param>
            <param name="lang">언어종류</param>
            <returns>코드명 - 언어종류</returns>
        </member>
        <member name="P:JangBoGo.CommonCode.CodeMemberRepository.Item(System.String,System.String,JangBoGo.CommonCode.CommonCodeLang,System.Int32)">
            <summary>
            코드명 검색 - Adprint 전용
            </summary>
            <param name="type">코드타입</param>
            <param name="code">코드</param>
            <param name="joinerId">이용사ID</param>
            <returns>코드명 - 언어종류</returns>
        </member>
        <member name="P:JangBoGo.CommonCode.CodeMemberRepository.Item(System.String,System.String)">
            <summary>
            코드명 검색
            </summary>
            <param name="type">코드타입</param>
            <param name="code">코드</param>
            <returns>코드명 - 일어</returns>
        </member>
        <member name="P:JangBoGo.CommonCode.CodeMemberRepository.Item(System.String,System.String,JangBoGo.CommonCode.CommonCodeLang)">
            <summary>
            코드명 검색
            </summary>
            <param name="type">코드타입</param>
            <param name="code">코드</param>
            <param name="lang">언어종류</param>
            <returns>코드명 - 언어종류</returns>
        </member>
        <member name="P:JangBoGo.CommonCode.CodeMemberRepository.Item(System.String,JangBoGo.CommonCode.CommonCodeLang,System.Int32)">
            <summary>
            V2 주문 옵션에 사용할 코드타입 검색
            </summary>
            <param name="type"></param>
            <param name="lang"></param>
            <param name="joinerId"></param>
            <returns></returns>
        </member>
        <member name="M:JangBoGo.CommonCode.CodeMemberRepository.IsAlreadyDefinedPartnerSystemTypeCode(System.String,System.Int32)">
            <summary>
            이미 파트너에 정의된 타입코드 인지 판단.
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ACCESSPARAMTYPE">
            <summary>
             접근유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ACCOUNTAMOUNTTYPE">
            <summary>
             계좌거래금액유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ADDPRICE">
            <summary>
             추가금액
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ADMINTYPE">
            <summary>
             관리자유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.AFTERMAKE">
            <summary>
             후가공
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.AREA">
            <summary>
             면적
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ASSIGNTYPE">
            <summary>
             작업배정
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BACKGDSREQ">
            <summary>
             반품요청
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BACKGDSSTATE">
            <summary>
             반품처리
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK">
            <summary>
             은행
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK01">
            <summary>
             은행AD-SIGN
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK04">
            <summary>
             은행MYD3D
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK08">
            <summary>
             은행_Adbest
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK11">
            <summary>
             은행
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK14">
            <summary>
             은행_AdCup
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK15">
            <summary>
             은행cari-4u.com
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK17">
            <summary>
             은행adcard.jp
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANK21">
            <summary>
             은행hown.jp
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BANKBA">
            <summary>
             은행_디자인메이커
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BOARDSHOW">
            <summary>
             게시판출력
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BUGRESULTTYPE">
            <summary>
             버그처리
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BUSINESSAUTH">
            <summary>
             업무권한
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BUSINESSDEPART">
            <summary>
             사업부
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BUSINESSPOSITION">
            <summary>
             직위
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.BUSINESSTEAM">
            <summary>
             업무팀
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CLAIMPROCTYPE">
            <summary>
             클레임처리유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CLAIMREQTYPE">
            <summary>
             클레임요청유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CLAIMTYPE">
            <summary>
             클레임유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.COATINGSTATE">
            <summary>
             코팅상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.COLOR">
            <summary>
             상품색수
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.COUNSELRESULT">
            <summary>
             상담처리
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.COUNSELTYPE">
            <summary>
             상담종류
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CPY_AFTERMAKE">
            <summary>
             협력업체_후가공
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CPY_COATING">
            <summary>
             협력업체_코팅
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CPY_CTP">
            <summary>
             협력업체_판
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CPY_CUTTING">
            <summary>
             협력업체_재단
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CPY_PAPER">
            <summary>
             협력업체_종이
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CPY_PRINT">
            <summary>
             협력업체_인쇄
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.CUSTOMERPOTENTIALTYPE">
            <summary>
             가망고객유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DATACHECK_ANSWER">
            <summary>
             처리내용
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DATACHECK_PROBLEM">
            <summary>
             문제내용
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DATACHECKTYPE">
            <summary>
             데이타검토
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DATATROUBLECATEGORY">
            <summary>
             데이터문제카테고리
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DELIVERYSTATE">
            <summary>
             배송상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DEPOSITREQUESTPROCSTATE">
            <summary>
             입금요청처리결과상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DEPOSITREQUESTTYPE">
            <summary>
             입금요청유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DESIGNORDERSTATE">
            <summary>
             디자인주문처리상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DesignTemplateSide">
            <summary>
             디자인템플릿면
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DISCOUNTINOUT">
            <summary>
             할인처리
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DISCOUNTTYPE">
            <summary>
             할인종류
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.DISCOUNTTYPE0">
            <summary>
             할인처리유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.FILEATTACH">
            <summary>
             파일첨부
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.FILESAVEPLACE">
            <summary>
             파일등록장소
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.FILETYPE">
            <summary>
             파일유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.FORM">
            <summary>
             상품모양
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.FROMORD">
            <summary>
             발주처
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.GDSBADDESCTYPE">
            <summary>
             불량상세유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.GDSBADTYPE">
            <summary>
             불량유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.GDSSALETYPE">
            <summary>
             판매상품유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.GDSSTATE">
            <summary>
             상품상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.GOODSGROUPCODE">
            <summary>
             상품그룹코드
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.GOODSPACKAGETYPE">
            <summary>
             상품포장유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.HOLIDAYTYPE">
            <summary>
             휴일종류
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.INOUTPUTSTATE">
            <summary>
             입출금상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.INPUT_NAME">
            <summary>
             인풋명
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.INPUTTYPE">
            <summary>
             입금
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.INTSELLCOUNT">
            <summary>
             후가공매수
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.KINDORDER">
            <summary>
             주문종류
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.LENGTH">
            <summary>
             길이
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.LENGTHUNIT">
            <summary>
             길이단위
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.LOGTYPE">
            <summary>
             로그유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.MAILRECTYPE">
            <summary>
             메일수신
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.MAILTYPE">
            <summary>
             메일유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.MAKESTATE">
            <summary>
             제작상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.MAKETYPE">
            <summary>
             제작유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.MANAGETYPE">
            <summary>
             직영유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.MATERIALCODE">
            <summary>
             상품재질
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.MKORDERTYPE">
            <summary>
             발주유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.NATIONCODE">
            <summary>
             국가
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.OBSERVERTYPE">
            <summary>
             관심대상
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ORDERCODE">
            <summary>
             번호
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ORDERMEMOTYPE">
            <summary>
             주문메모유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ORDERTYPE">
            <summary>
             주문타입
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ORDERUSER">
            <summary>
             주문자
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ORDERWORKSTATE">
            <summary>
             발송처리작업상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.ORDSTATE">
            <summary>
             주문상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PACKAGETYPE">
            <summary>
             패키지모양
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PACKUNIT">
            <summary>
             포장단위
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PARTNERDELIVERYGROUPUSETYPE">
            <summary>
             파트너배송그룹사용유무
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PARTNERDELIVERYSTANDARD">
            <summary>
             배송료산정기준
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PARTNERDESIGNGOODSSTATE">
            <summary>
             파트너디자인상품상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PARTNERGOODSPRICESELLSTATE">
            <summary>
             파트너상품가격판매상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PARTNERGOODSSELLSTATE">
            <summary>
             파트너상품판매상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PARTNERGOODSSTATE">
            <summary>
             파트너상품승인상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PARTNERTYPE">
            <summary>
             파트너유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PAYMENTTYPE">
            <summary>
             결재유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.POINTLOGTYPE">
            <summary>
             포인트로그유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.POINTTYPE">
            <summary>
             포인트유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.POPUPTYPE">
            <summary>
             팝업종류
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.PRICESTATE">
            <summary>
             가격상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.QnA">
            <summary>
             문의
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.READSTATUS">
            <summary>
             확인여부
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.RECEIPTSTATE">
            <summary>
             영수증상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.RECIVERTYPE">
            <summary>
             배송처유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REGDATE">
            <summary>
             날짜
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REGTYPE">
            <summary>
             등록여부
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REMAKESTATE">
            <summary>
             재제작상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REMAKETYPE">
            <summary>
             재작업요청
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REPLYSTATUS">
            <summary>
             답변상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REVIEWPROCSTATE">
            <summary>
             리뷰처리상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REVIEWSEARCHTYPE">
            <summary>
             리뷰검색유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.REVISIONTYPE">
            <summary>
             보정요청
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.SALESAREA">
            <summary>
             영업판매지역
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.SENDSTATE">
            <summary>
             발송상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.SENDTYPE">
            <summary>
             발송처서비스
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.SITE">
            <summary>
             사이트
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.SITEFORMTYPE">
            <summary>
             사이트디자인유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.SITETYPE">
            <summary>
             사이트취급상품군
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.TITLE">
            <summary>
             거기본정보제목
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.TOMSON">
            <summary>
             도무송
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.TRADECPYTYPE">
            <summary>
             거래처종류
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.TRADEORDSTATE">
            <summary>
             발주상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.TRANSLATE">
            <summary>
             단문번역
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.USERGRADE">
            <summary>
             회원등급
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.USERSEARCH1">
            <summary>
             회원검색사용자항목1
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.USERSEARCH2">
            <summary>
             회원검색사용자항목2
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.USERSTATE">
            <summary>
             회원상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.USERTYPE">
            <summary>
             회원종류
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.USETYPE">
            <summary>
             사용여부
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.WEEKDAY">
            <summary>
             주간요일명
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.WEEKTERM">
            <summary>
             영업일적용주기
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.WEIGHT">
            <summary>
             무게
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.WORKSTATE">
            <summary>
             작업상태
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType.WORKTYPE">
            <summary>
             작업유형
            </summary>
        </member>
        <member name="F:JangBoGo.CommonCode.CommonCodeGroupType._CATEGORYCODEPATH">
            <summary>
             카테고리코드패스
            </summary>
        </member>
        <member name="M:JangBoGo.Util.IP.Country.#ctor(System.String,System.String)">
             Creates a new Country.
            
             @param code the country code.
             @param name the country name.
        </member>
        <member name="M:JangBoGo.Util.IP.Country.getCode">
             Returns the ISO two-letter country code of this country.
            
             @return the country code.
        </member>
        <member name="M:JangBoGo.Util.IP.Country.getName">
             Returns the name of this country.
            
             @return the country name.
        </member>
        <member name="M:JangBoGo.Util.IP.DatabaseInfo.#ctor(System.String)">
            Creates a new DatabaseInfo object given the database info String.
            @param info
        </member>
        <member name="M:JangBoGo.Util.IP.DatabaseInfo.isPremium">
             Returns true if the database is the premium version.
            
             @return true if the premium version of the database.
        </member>
        <member name="M:JangBoGo.Util.IP.DatabaseInfo.getDate">
             Returns the date of the database.
            
             @return the date of the database.
        </member>
        <member name="M:JangBoGo.Web.CustomHttpRequest.Add(Newtonsoft.Json.Linq.JObject)">
            <summary>
            JObject 을 CustomHttpRequest 객체의 Form 속성에 주입한다.
            0뎁스 값을 기준으로 주입합니다.
            </summary>
        </member>
        <member name="M:JangBoGo.Web.CustomHttpRequest.SetServerVariablesAdprintBatch">
            <summary>
            클라이언트측 서버요청정보를 ADPRINT 배치로 기본 셋팅
            </summary>
        </member>
        <member name="T:JangBoGo.Web.SpringAutowireController">
                    SpringAutowireController
                    이 컨트롤러는
                    . JsonResult 를 재정의 합니다.
                    . COD  : mainDb 가 정의되어 있습니다.
                    . CODJ : jangbogoDb 가 정의되어 있습니다.
        </member>
        <member name="M:DataReaderExtendFunction.RemoveXmlCharacterBlacklist(System.String)">
            <summary>
            xml 컨버팅 불가능 문자
            </summary>
            <param name="in_string"></param>
            <returns></returns>
        </member>
        <member name="M:DirectoryInfoExtendFunction.GetFilesMultiPattern(System.IO.DirectoryInfo,System.String,System.IO.SearchOption)">
            <summary>
            ex) dirInfo.GetFilesMultiPattern("*.txt; *.ini; test.txt");
            </summary>
        </member>
        <member name="M:intExtendFunction.Digists(System.Int32)">
            <summary>
            자릿수
            </summary>
        </member>
        <member name="M:ListExtendFunction.ToInQueryParam(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            배열을 쿼리 IN 조건의 값으로 변경한다.
            ex) { "1", "2" } => '1', '2'
            </summary>
        </member>
        <member name="M:ListExtendFunction.ToInOpenQueryParam(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            배열을 쿼리 IN 조건의 값으로 변경한다.
            ex) { "1", "2" } => ''1'', ''2''
            </summary>
        </member>
        <member name="M:ListExtendFunction.Partition``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            파티션
            <para>리스트를 파티션으로 나눕니다.</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:ObjectExtendFunction.ConvertToDictionary(System.Object)">
            <summary>
            Dictionary 로 변환
            </summary>
        </member>
        <member name="M:StringExtendFunction.ToInString(System.String)">
            <summary>
            "A,B".ToInString()="'A','B'"
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:StringExtendFunction.IndexOfAll(System.String,System.String,System.Int32,System.StringComparison)">
            <summary>
            문자열에서 <paramref name="value"/>에 해당하는 모든 인덱스를 가져 옵니다.
            </summary>
            <param name="str">문자열</param>
            <param name="value">값</param>
            <param name="startIndex">탐색시작위치</param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:TypeExtendFunction.IsStatic(System.Type)">
            <summary>
            Static 타입 여부
            </summary>
            <param name="type">타입</param>
        </member>
        <member name="M:TypeExtendFunction.IsNumeric(System.Type)">
            <summary>
            숫자형타입여부 (Nullable의 경우도 동일하게 확인)
            </summary>
            <param name="type">타입</param>
        </member>
        <member name="M:TypeExtendFunction.IsNullable(System.Type)">
            <summary>
            Null 할당 가능여부
            </summary>
            <param name="type">타입</param>
        </member>
        <member name="M:Trade.ZipCode.Dao.IZipCodeDao.FindItem(System.String,System.Int32[])">
            <summary>
            우편번호 조회
            </summary>
            <param name="zipCode">우편번호</param>
            <param name="goodsIds">상품번호</param>
            <returns>우편번호 정보와 이용사에서 상품별 설정된 대인가능여부, 시간지정여부, 배송추가금액 정보를 가져온다.</returns>
        </member>
        <member name="M:Trade.ZipCode.Dao.IZipCodeDao.FindItemFirst">
            <summary>
            우편번호 조회 - 최초 등록 건
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trade.ZipCode.Dao.ZipCodeDao.GetZipCodeInfo(System.Int32,System.String)">
            <summary>
            오픈마켓 우편번호 ZIP_INFO
            </summary>
        </member>
        <member name="M:Trade.ZipCode.Dao.ZipCodeDao.FindItem(System.String,System.Int32[])">
            <summary>
            우편번호 조회
            </summary>
            <param name="zipCode">우편번호</param>
            <param name="goodsIds">상품번호</param>
            <returns>우편번호 정보와 이용사에서 상품별 설정된 대인가능여부, 시간지정여부, 배송추가금액 정보를 가져온다.</returns>
        </member>
        <member name="M:Trade.ZipCode.Dao.ZipCodeDao.FindItemFirst">
            <summary>
            우편번호 조회 - 최초 등록 건
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trade.Service.ZipcodeArea.ZipcodeAreaService.UpdateSpecificAreaDependencyZipCodes(System.Int32,System.String)">
            <summary>
            우편번호의 ZipcodeSpecificAreaCode 컬럼을 수정 합니다.
            </summary>
        </member>
        <member name="M:Trade.Service.ZipcodeArea.ZipcodeAreaService.FindZipcodeBySearchValue(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            우편번호 검색기
            도도부현기준 우편번호를 검색한다.
            </summary>
        </member>
        <member name="M:Trade.Service.ZipcodeArea.ZipcodeAreaService.ValidateZipcodeArea(System.String,System.Int32,Trade.ZipCodeSpecificArea.Model.ZipCodeSpecificAreaItem@)">
            <summary>
            우편번호 정합성 검증
            해당 상품이 발송가능지역인지 판단한다.
            </summary>
        </member>
    </members>
</doc>
